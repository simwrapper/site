{"version":3,"file":"sequential-ed776364.js","sources":["../../node_modules/d3-scale/src/sequential.js"],"sourcesContent":["import {interpolate, interpolateRound} from \"d3-interpolate\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport {loggish} from \"./log.js\";\nimport {symlogish} from \"./symlog.js\";\nimport {powish} from \"./pow.js\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  function range(interpolate) {\n    return function(_) {\n      var r0, r1;\n      return arguments.length ? ([r0, r1] = _, interpolator = interpolate(r0, r1), scale) : [interpolator(0), interpolator(1)];\n    };\n  }\n\n  scale.range = range(interpolate);\n\n  scale.rangeRound = range(interpolateRound);\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n"],"names":["transformer","x0","x1","t0","t1","k10","transform","interpolator","identity","clamp","unknown","scale","x","_","range","interpolate","r0","r1","interpolateRound","copy","source","target","sequential","linearish","initInterpolator","sequentialLog","loggish","sequentialSymlog","symlogish","sequentialPow","powish","sequentialSqrt"],"mappings":"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","x_google_ignoreList":[0]}