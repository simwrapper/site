{"version":3,"file":"VehicleAnimation-1221f461.js","sources":["../../src/plugins/xmas-kelheim/LegendColors.tsx","../../src/plugins/xmas-kelheim/SettingsPanel.vue","../../src/plugins/xmas-kelheim/eventParser.ts","../../src/plugins/xmas-kelheim/DrtRequestLayer.tsx","../../src/layers/moving-icons/moving-icons-vehicles-layer.ts","../../src/plugins/xmas-kelheim/TripViz.tsx","../../src/plugins/xmas-kelheim/VehicleAnimation.vue"],"sourcesContent":["import { LegendItem } from '@/Globals'\nimport React from 'react'\n\nexport default function Component(props: {\n  title: string\n  description?: string\n  values: number[]\n  items: LegendItem[]\n  mobile: boolean\n}) {\n  const regStyle = { display: 'flex' } as any\n  const mobileStyle = { boxSizing: 'border-box', float: 'left', marginRight: '0.5rem' } as any\n\n  const listItems = props.items.map(item => (\n    <li key={item.value + item.value[0]} style={props.mobile ? mobileStyle : regStyle}>\n      {item.label && (\n        <div\n          style={{\n            margin: '0 0.5rem 0.0rem 0',\n            fontWeight: 'bold',\n          }}\n        >\n          {item.label}\n        </div>\n      )}\n      <div\n        style={{\n          width: props.mobile ? '3rem' : '100%',\n          height: `3px`,\n          marginTop: '0.5rem',\n          backgroundColor: `rgb(${item.color})`,\n        }}\n      ></div>\n    </li>\n  ))\n\n  return (\n    <div>\n      <h4\n        style={{\n          textAlign: 'left',\n          fontWeight: 'bold',\n          margin: '1rem 0 0.25rem 0',\n          fontSize: '0.8rem',\n        }}\n      >\n        {props.title}\n      </h4>\n      <p>{props.description}</p>\n      <ul style={{ listStyle: 'none', padding: 0, margin: 0 }}>{listItems}</ul>\n    </div>\n  )\n}\n","<template lang=\"pug\">\n.settings-panel-content\n  h4 {{ $t('showhide')}}\n\n  .items\n    .row(:key=\"label\" v-for=\"label in Object.keys(items)\")\n      toggle-button.toggle(\n        :width=\"40\"\n        :value=\"items[label]\"\n        :labels=\"false\"\n        :color=\"{checked: '#4b7cc4', unchecked: '#222'}\"\n        @change=\"$emit('click',label)\")\n      label(v-html=\"$t(label)\")\n\n</template>\n\n<script lang=\"ts\">\nconst i18n = {\n  messages: {\n    en: {\n      requests: 'DRT&nbsp;Requests',\n      passengers: 'Passengers',\n      search: 'Search',\n      showhide: 'Show/Hide',\n      vehicles: 'DRT Vehicles',\n      routes: 'Routes',\n      speed: 'Speed',\n      backgroundTraffic: 'All Traffic',\n    },\n    de: {\n      requests: 'DRT&nbsp;Anfragen',\n      passengers: 'Passagiere',\n      search: 'Suche',\n      showhide: 'Ein-/Ausblenden',\n      vehicles: 'DRT Fahrzeuge',\n      routes: 'Routen',\n      speed: 'Geschwindigkeit',\n      backgroundTraffic: 'Alle Fahrzeuge',\n    },\n  },\n}\n\nimport { defineComponent } from 'vue'\nimport { ToggleButton } from 'vue-js-toggle-button'\n\nexport default defineComponent({\n  name: 'XmasSettingsPanel',\n  i18n,\n  components: { ToggleButton },\n  props: {\n    items: { type: Object, required: true },\n  },\n})\n</script>\n\n<style scoped lang=\"scss\">\n.settings-panel-content {\n  margin: 2rem 0.25rem 0 0.25rem;\n}\n\nh4 {\n  font-weight: bold;\n  font-size: 0.8rem;\n  margin-bottom: 0.5rem;\n}\n\n.row {\n  display: 'block';\n  flex-direction: 'column';\n}\n\nlabel {\n  margin: auto 0 auto 0rem;\n  text-align: 'left';\n}\n\n.toggle {\n  margin-bottom: 0.25rem;\n  margin-right: 0.5rem;\n}\n\n@media only screen and (max-width: 640px) {\n  .items {\n    display: flex;\n  }\n  .items .row {\n    flex: 1;\n  }\n\n  .settings-panel-content {\n    margin-top: 0;\n  }\n}\n</style>\n","// This fetches all folders from all root filesystems, and returns\nimport store from '@/store'\nimport HTTPFileSystem from '@/js/HTTPFileSystem'\nimport { FileSystemConfig } from '@/Globals'\nimport DashboardDataManager, { NetworkLinks } from '@/js/DashboardDataManager'\nimport MATSimEventStreamer from '@/workers/MATSimEventStreamer.worker.ts?worker'\n\nexport default class EventParser {\n  private fileApi: HTTPFileSystem\n  private linkIdLookup = {} as any\n  private network!: NetworkLinks\n  private eventWorker: any\n  private eventLayers = [] as any[]\n  private range = [Infinity, -Infinity]\n  private timeRange = [Infinity, -Infinity]\n  private $emit: any = () => {}\n  private boundBox = [] as number[][]\n\n  // these must be passed into constructor\n  private params: {\n    fileSystem: FileSystemConfig\n    dataManager: DashboardDataManager\n    vizDetails: any\n    subfolder: string\n  }\n\n  constructor(props: {\n    fileSystem: FileSystemConfig\n    dataManager: DashboardDataManager\n    vizDetails: any\n    subfolder: string\n    $emit?: any\n    boundBox?: number[][]\n  }) {\n    this.params = { ...props }\n    this.fileApi = new HTTPFileSystem(props.fileSystem)\n    if (props.$emit) this.$emit = props.$emit\n    if (props.boundBox) this.boundBox = props.boundBox\n  }\n\n  public async loadFiles() {\n    const { network, linkIdLookup } = await this.loadNetwork()\n    this.network = network\n    this.linkIdLookup = linkIdLookup\n\n    try {\n      let filename = `${this.params.subfolder}/${this.params.vizDetails.events}`\n      const layers = await this.streamEventFile(filename)\n      return layers\n    } catch (e) {\n      console.error(e)\n      throw Error('' + e)\n    }\n    return []\n  }\n\n  private async loadNetwork() {\n    // get network\n    let networkFilename = this.params.vizDetails.events.replace('events.xml', 'network.xml')\n    const network = await this.params.dataManager.getRoadNetwork(\n      networkFilename,\n      this.params.subfolder,\n      Object.assign({ projection: '25833' }, this.params.vizDetails)\n    )\n    // build i-based mapping of id strings\n    const linkIdLookup = {} as any\n    network.linkIds.forEach((link: any, i: number) => {\n      linkIdLookup[`${link}`] = i\n    })\n\n    return { network, linkIdLookup }\n  }\n\n  private streamEventFile(filename: string): Promise<any[]> {\n    const promise: Promise<any[]> = new Promise((resolve, reject) => {\n      const finishedLoadingData = (totalRows: number, data: any) => {\n        console.log('FINAL time', this.timeRange)\n        this.$emit('finished')\n        this.eventWorker.terminate()\n        console.log('DONE: layers', this.eventLayers.length)\n\n        console.log('ALL DONE', { totalRows, data: data.range, time: this.timeRange })\n        this.range = data.range\n        resolve(this.eventLayers)\n      }\n\n      this.$emit('status', 'Loading file...')\n      let totalRows = 0\n      this.range = [Infinity, -Infinity]\n      this.timeRange = [Infinity, -Infinity]\n\n      // get the raw unzipped arraybuffer\n      if (this.eventWorker) this.eventWorker.terminate()\n      this.eventLayers = []\n      this.eventWorker = new MATSimEventStreamer()\n\n      const formatter = Intl.NumberFormat()\n\n      this.eventWorker.onmessage = async (event: MessageEvent) => {\n        const message = event.data\n        if (message.status) {\n          this.$emit('status', message.status)\n        } else if (message.error) {\n          throw Error(message.error)\n        } else if (message.finished) {\n          finishedLoadingData(totalRows, message)\n          return\n        } else {\n          const events = message.events as any[]\n\n          console.log(events.length)\n\n          totalRows += events.length\n          this.$emit('status', 'Loading ' + formatter.format(totalRows) + ' events...')\n\n          // minmax all events\n          this.timeRange = [\n            Math.min(this.timeRange[0], events[0].time),\n            Math.max(this.timeRange[1], events[events.length - 1].time),\n          ]\n\n          // minmax vehicle trips specifically\n          this.timeRange = [\n            Math.min(this.timeRange[0], message.vehicleTrips[0].t0),\n            Math.max(this.timeRange[1], message.vehicleTrips[message.vehicleTrips.length - 1].t1),\n          ]\n\n          // VEHICLES -----------\n\n          // if we have a bounding box, filter the links\n          let vehicleTrips = message.vehicleTrips\n          console.log('ROIGINAL LENGHT', vehicleTrips.length)\n          if (this.boundBox.length) {\n            const orig = this.network.source\n            const dest = this.network.dest\n            vehicleTrips = message.vehicleTrips.filter((trip: any) => {\n              const offset = 2 * this.linkIdLookup[trip.link]\n              return (\n                orig[offset] > this.boundBox[0][0] &&\n                orig[offset] < this.boundBox[1][0] &&\n                orig[offset + 1] > this.boundBox[0][1] &&\n                orig[offset + 1] < this.boundBox[1][1] &&\n                dest[offset] > this.boundBox[0][0] &&\n                dest[offset] < this.boundBox[1][0] &&\n                dest[offset + 1] > this.boundBox[0][1] &&\n                dest[offset + 1] < this.boundBox[1][1]\n              )\n            })\n            console.log('FILTERED LENGTH:', vehicleTrips.length)\n          }\n\n          const numTrips = vehicleTrips.length\n          const tripData = {\n            locO: new Float32Array(2 * numTrips).fill(NaN),\n            locD: new Float32Array(2 * numTrips).fill(NaN),\n            t0: new Float32Array(numTrips).fill(NaN),\n            t1: new Float32Array(numTrips).fill(NaN),\n          }\n\n          for (let i = 0; i < numTrips; i++) {\n            const trip = vehicleTrips[i]\n            const offset = 2 * this.linkIdLookup[trip.link]\n            tripData.locO[i * 2 + 0] = this.network.source[0 + offset]\n            tripData.locO[i * 2 + 1] = this.network.source[1 + offset]\n            tripData.locD[i * 2 + 0] = this.network.dest[0 + offset]\n            tripData.locD[i * 2 + 1] = this.network.dest[1 + offset]\n            // enter/leave traffic happen in the middle of the link\n            if (i == 0) {\n              tripData.locO[i * 2 + 0] = 0.5 * (tripData.locO[i * 2 + 0] + tripData.locD[i * 2 + 0])\n              tripData.locO[i * 2 + 1] = 0.5 * (tripData.locO[i * 2 + 1] + tripData.locD[i * 2 + 1])\n            } else if (i == numTrips - 1) {\n              tripData.locD[i * 2 + 0] = 0.5 * (tripData.locO[i * 2 + 0] + tripData.locD[i * 2 + 0])\n              tripData.locD[i * 2 + 1] = 0.5 * (tripData.locO[i * 2 + 1] + tripData.locD[i * 2 + 1])\n            }\n            tripData.t0[i] = trip.t0\n            tripData.t1[i] = trip.t1\n          }\n\n          // ALL DONE --------\n          this.eventLayers.push({\n            vehicles: tripData,\n          })\n        }\n      }\n\n      this.eventWorker.postMessage({\n        filePath: filename,\n        fileSystem: this.params.fileSystem,\n        projection: this.params.vizDetails.projection,\n        boundBox: this.boundBox,\n      })\n    })\n    return promise\n  }\n}\n","import { ArcLayer } from '@deck.gl/layers'\n\nconst defaultProps = {\n  currentTime: { type: 'number', value: 0, min: 0 },\n  getTimeStart: { type: 'accessor', value: null },\n  getTimeEnd: { type: 'accessor', value: null },\n  searchFlag: { type: 'number', value: 0 },\n}\n\nexport default class DrtRequestArcLayer extends ArcLayer {\n  getShaders() {\n    const shaders = super.getShaders()\n    shaders.inject = {\n      // Timestamp of the vertex\n      'vs:#decl': `\\\n        attribute float timeStart;\n        attribute float timeEnd;\n        uniform float currentTime;\n        uniform float searchFlag;\n        varying float vTime;\n      `,\n      'vs:#main-start': `\\\n        if (searchFlag == 1.0) {\n          vTime = 999.0;\n        } else if (timeEnd == -1.0 || timeStart > currentTime || timeEnd < currentTime ) {\n          vTime = -1.0;\n          return;\n        } else {\n          float nearBeginning = currentTime - timeStart;\n          float nearEnd = timeEnd - currentTime;\n          vTime = min(nearBeginning, nearEnd);\n        }\n      `,\n      'fs:#decl': `\\\n        uniform float currentTime;\n        uniform float searchFlag;\n        varying float vTime;\n      `,\n      'fs:#main-start': `\\\n      if (searchFlag == 0.0 && vTime == -1.0 ) discard;\n      `,\n      // fade the traces in and out\n      'fs:DECKGL_FILTER_COLOR': `\\\n        if (vTime <= 10.0) color.a *= (vTime / 10.0);\n      `,\n    }\n    return shaders\n  }\n\n  initializeState(params: any) {\n    super.initializeState(params)\n\n    const attributeManager = this.getAttributeManager()\n    attributeManager.addInstanced({\n      timeStart: { size: 1, accessor: 'getTimeStart' },\n      timeEnd: { size: 1, accessor: 'getTimeEnd' },\n    })\n  }\n\n  draw(params: any) {\n    const { currentTime } = this.props\n\n    params.uniforms = Object.assign({}, params.uniforms, {\n      currentTime,\n    })\n\n    super.draw(params)\n  }\n}\n\nDrtRequestArcLayer.layerName = 'DrtRequestArcLayer'\nDrtRequestArcLayer.defaultProps = defaultProps\n","// BC 2021-04-30: this file forked from https://github.com/visgl/deck.gl\n//\n// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport { Layer, project32, picking, log } from '@deck.gl/core'\nimport GL from '@luma.gl/constants'\nimport { Model, Geometry } from '@luma.gl/core'\n\nimport vertShader from './icon-layer.glsl.vert?raw'\nimport fragShader from './icon-layer.glsl.frag?raw'\n\nimport IconManager from './icon-manager'\n\nconst DEFAULT_COLOR = [0, 0, 0, 255]\n\nconst defaultProps = {\n  iconAtlas: { type: 'image', value: null, async: true },\n  iconMapping: { type: 'object', value: {}, async: true },\n  sizeScale: { type: 'number', value: 1, min: 0 },\n  billboard: false,\n  sizeUnits: 'pixels',\n  sizeMinPixels: { type: 'number', min: 0, value: 0 }, //  min point radius in pixels\n  sizeMaxPixels: { type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER }, // max point radius in pixels\n  alphaCutoff: { type: 'number', value: 0.05, min: 0, max: 1 },\n  iconStill: { type: 'object', value: null },\n\n  getIcon: { type: 'accessor', value: 'vehicle' }, // (x: any) => x.icon },\n  getBOffsets: { type: 'accessor', value: [0, 0] }, // (x: any) => x.icon },\n  getBIconFrames: { type: 'accessor', value: [128, 128, 128, 128] }, // (x: any) => x.icon },\n  getBColorModes: { type: 'accessor', value: 1 }, // (x: any) => x.icon },\n\n  getColor: { type: 'accessor', value: DEFAULT_COLOR },\n  getSize: { type: 'accessor', value: 1 },\n  getAngle: { type: 'accessor', value: 0 },\n  getPixelOffset: { type: 'accessor', value: [0, 0] },\n\n  getPathStart: { type: 'accessor', value: null },\n  getPathEnd: { type: 'accessor', value: null },\n  getTimeStart: { type: 'accessor', value: null },\n  getTimeEnd: { type: 'accessor', value: null },\n  currentTime: { type: 'number', value: 0 },\n\n  pickable: { type: 'boolean', value: true },\n  onIconError: { type: 'function', value: null, compare: false, optional: true },\n}\n\nexport default class IconLayer extends Layer {\n  getShaders() {\n    return super.getShaders({ vs: vertShader, fs: fragShader, modules: [project32, picking] })\n  }\n\n  initializeState() {\n    this.state = {\n      iconManager: new IconManager(this.context.gl, {\n        onUpdate: this._onUpdate.bind(this),\n        onError: this._onError.bind(this) as any,\n      }),\n    }\n\n    const attributeManager = this.getAttributeManager()\n\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instanceTimestamps: {\n        size: 1,\n        accessor: 'getTimeStart',\n      },\n      instanceTimestampsNext: {\n        size: 1,\n        accessor: 'getTimeEnd',\n      },\n      instanceStartPositions: {\n        size: 2,\n        accessor: 'getPathStart',\n      },\n      instanceEndPositions: {\n        size: 2,\n        accessor: 'getPathEnd',\n      },\n      instanceSizes: {\n        size: 1,\n        transition: true,\n        accessor: 'getSize',\n        defaultValue: 1,\n      },\n      instanceOffsets: {\n        size: 2,\n        defaultValue: [0, 0],\n        accessor: 'getBOffsets',\n        // transform: this.getInstanceOffset\n      },\n      instanceIconFrames: {\n        size: 4,\n        defaultValue: [0, 0, 128, 128],\n        accessor: 'getBIconFrames',\n        // transform: this.getInstanceIconFrame\n      },\n      instanceColorModes: {\n        size: 1,\n        type: GL.UNSIGNED_BYTE,\n        defaultValue: 1,\n        accessor: 'getBColorModes',\n        // accessor: 'getIcon',\n        // transform: this.getInstanceColorMode,\n      },\n\n      // instanceOffsets: { size: 2, accessor: 'getIcon', transform: this.getInstanceOffset },\n      // instanceIconFrames: { size: 4, accessor: 'getIcon', transform: this.getInstanceIconFrame },\n      // instanceColorModes: {\n      //   size: 1,\n      //   type: GL.UNSIGNED_BYTE,\n      //   accessor: 'getIcon',\n      //   transform: this.getInstanceColorMode,\n      // },\n      instanceColors: {\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        transition: true,\n        accessor: 'getColor',\n        defaultValue: DEFAULT_COLOR,\n      },\n      instanceAngles: {\n        size: 1,\n        transition: true,\n        accessor: 'getAngle',\n      },\n      instancePixelOffset: {\n        size: 2,\n        transition: true,\n        accessor: 'getPixelOffset',\n      },\n    })\n    /* eslint-enable max-len */\n  }\n\n  /* eslint-disable max-statements, complexity */\n  updateState({ oldProps, props, changeFlags }: any) {\n    super.updateState({ props, oldProps, changeFlags })\n\n    const attributeManager = this.getAttributeManager()\n    const { iconAtlas, iconMapping, data, getIcon } = props\n    const { iconManager } = this.state\n\n    iconManager.setProps({ loadOptions: props.loadOptions })\n\n    let iconMappingChanged = false\n    const prePacked = iconAtlas || this.internalState.isAsyncPropLoading('iconAtlas')\n\n    // prepacked iconAtlas from user\n    if (prePacked) {\n      if (oldProps.iconAtlas !== props.iconAtlas) {\n        iconManager.setProps({ iconAtlas, autoPacking: false })\n      }\n\n      if (oldProps.iconMapping !== props.iconMapping) {\n        iconManager.setProps({ iconMapping })\n        iconMappingChanged = true\n      }\n    } else {\n      // otherwise, use autoPacking\n      iconManager.setProps({ autoPacking: true })\n    }\n\n    // handle data changed\n    if (\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getIcon))\n    ) {\n      iconManager.setProps({ data, getIcon })\n    }\n\n    if (iconMappingChanged) {\n      attributeManager.invalidate('instanceOffsets')\n      attributeManager.invalidate('instanceIconFrames')\n      attributeManager.invalidate('instanceColorModes')\n    }\n\n    if (changeFlags.extensionsChanged) {\n      const { gl } = this.context\n      this.state.model?.delete()\n      this.state.model = this._getModel(gl)\n      attributeManager.invalidateAll()\n    }\n  }\n  /* eslint-enable max-statements, complexity */\n\n  get isLoaded() {\n    return super.isLoaded && this.state.iconManager.isLoaded\n  }\n\n  finalizeState() {\n    super.finalizeState()\n    // Release resources held by the icon manager\n    this.state.iconManager.finalize()\n  }\n\n  draw({ uniforms }: any) {\n    const {\n      sizeScale,\n      sizeMinPixels,\n      sizeMaxPixels,\n      sizeUnits,\n      billboard,\n      alphaCutoff,\n      currentTime,\n      iconStill,\n      pickable,\n    } = this.props\n\n    const { iconManager } = this.state\n    const { viewport } = this.context\n\n    const iconsTexture = iconManager.getTexture()\n    if (iconsTexture) {\n      this.state.model\n        .setUniforms(uniforms)\n        .setUniforms({\n          iconsTexture,\n          iconsTextureDim: [iconsTexture.width, iconsTexture.height],\n          sizeScale: sizeScale * (sizeUnits === 'pixels' ? viewport.metersPerPixel : 1),\n          sizeMinPixels,\n          sizeMaxPixels,\n          billboard,\n          alphaCutoff,\n          currentTime,\n          pickable,\n          iconStillOffsets: this.getInstanceOffset(iconStill),\n          iconStillFrames: this.getInstanceIconFrame(iconStill),\n        })\n        .draw()\n    }\n  }\n\n  _getModel(gl: any) {\n    // The icon-layer vertex shader uses 2d positions\n    // specifed via: attribute vec2 positions;\n    const positions = [-1, -1, -1, 1, 1, 1, 1, -1]\n\n    return new Model(gl, {\n      ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: GL.TRIANGLE_FAN,\n        attributes: {\n          // The size must be explicitly passed here otherwise luma.gl\n          // will default to assuming that positions are 3D (x,y,z)\n          positions: {\n            size: 2,\n            value: new Float32Array(positions),\n          },\n        },\n      }),\n      isInstanced: true,\n    })\n  }\n\n  _onUpdate() {\n    this.setNeedsRedraw()\n  }\n\n  _onError(evt: any) {\n    const { onIconError } = this.getCurrentLayer().props\n    if (onIconError) {\n      onIconError(evt)\n    } else {\n      log.error(evt.error)()\n    }\n  }\n\n  getInstanceOffset(icon: any) {\n    const rect = this.state.iconManager.getIconMapping(icon)\n    return [rect.width / 2 - rect.anchorX || 0, rect.height / 2 - rect.anchorY || 0]\n  }\n\n  getInstanceColorMode(icon: any) {\n    const mapping = this.state.iconManager.getIconMapping(icon)\n    return mapping.mask ? 1 : 0\n  }\n\n  getInstanceIconFrame(icon: any) {\n    const rect = this.state.iconManager.getIconMapping(icon)\n    return [rect.x || 0, rect.y || 0, rect.width || 0, rect.height || 0]\n  }\n}\n\nIconLayer.layerName = 'FlatIconLayer'\nIconLayer.defaultProps = defaultProps\n","import React, { useState, useMemo, useEffect } from 'react'\nimport { StaticMap } from 'react-map-gl'\nimport { AmbientLight, PointLight, LightingEffect } from '@deck.gl/core'\nimport DeckGL from '@deck.gl/react'\n\nimport DrtRequestLayer from './DrtRequestLayer'\nimport MovingIconsLayer from '@/layers/moving-icons/moving-icons-layer'\nimport MovingVehiclesLayer from '@/layers/moving-icons/moving-icons-vehicles-layer'\nimport PathTraceLayer from '@/layers/PathTraceLayer'\nimport { MAPBOX_TOKEN, REACT_VIEW_HANDLES } from '@/Globals'\n\nimport globalStore from '@/store'\n\nconst BASE_URL = import.meta.env.BASE_URL\n\nconst ICON_MAPPING = {\n  marker: { x: 0, y: 0, width: 128, height: 128, mask: true },\n  info: { x: 128, y: 0, width: 128, height: 128, mask: true },\n  vehicle: { x: 128, y: 128, width: 128, height: 128, mask: true },\n  diamond: { x: 0, y: 128, width: 128, height: 128, mask: false },\n}\n\nconst ambientLight = new AmbientLight({\n  color: [255, 255, 255],\n  intensity: 1.0,\n})\n\nconst pointLight = new PointLight({\n  color: [255, 255, 255],\n  intensity: 2.0,\n  position: [-74.05, 40.7, 8000],\n})\n\nconst lightingEffect = new LightingEffect({ ambientLight, pointLight })\n\nconst DEFAULT_THEME = {\n  vehicleColor: [200, 130, 250],\n  trailColor0: [235, 235, 25],\n  trailColor1: [23, 184, 190],\n  effects: [lightingEffect],\n}\n\nconst DRT_REQUEST = {\n  time: 0,\n  fromX: 1,\n  fromY: 2,\n  toX: 3,\n  toY: 4,\n  veh: 5,\n  arrival: 6,\n}\n\nexport default function Component(props: {\n  viewId: number\n  dark: boolean\n  simulationTime: number\n  paths: any[]\n  drtRequests: any[]\n  traces: any[]\n  colors: any\n  center: [number, number]\n  settingsShowLayers: { [label: string]: boolean }\n  vehicleLookup: string[]\n  searchEnabled: boolean\n  onClick: any\n  trafficLayers: any[]\n}) {\n  const {\n    simulationTime,\n    paths,\n    traces,\n    drtRequests,\n    settingsShowLayers,\n    center,\n    dark,\n    vehicleLookup,\n    searchEnabled,\n    onClick,\n    viewId,\n    trafficLayers,\n  } = props\n\n  const theme = DEFAULT_THEME\n\n  // set initial view\n  const [viewState, setViewState] = useState(\n    center\n      ? ({\n          center: [16, 42],\n          longitude: center[0],\n          latitude: center[1],\n          pitch: 0,\n          bearing: 0,\n          zoom: 10,\n        } as any)\n      : Object.assign({}, globalStore.state.viewState)\n  )\n\n  // register setViewState in global view updater so we can respond to external map motion\n  REACT_VIEW_HANDLES[viewId] = () => {\n    setViewState(globalStore.state.viewState)\n  }\n\n  const arcWidth = 2\n  const [hoverInfo, setHoverInfo] = useState({} as any)\n\n  const layers: any = []\n\n  function handleClick() {\n    console.log(hoverInfo)\n    // send null as message that blank area was clicked\n    if (!hoverInfo.object) {\n      onClick(null)\n    } else {\n      onClick(hoverInfo.object.v)\n    }\n  }\n\n  function renderTooltip({ hoverInfo }: any) {\n    const { object, x, y } = hoverInfo\n\n    if (!object) {\n      return null\n    }\n\n    const vehicleId = vehicleLookup[object.v]\n\n    return (\n      <div\n        className=\"tooltip\"\n        style={{\n          fontSize: '0.8rem',\n          backgroundColor: '#ddddeedd',\n          borderLeft: '6px solid green',\n          boxShadow: '2.5px 2px 4px rgba(0,0,0,0.25)',\n          color: '#223',\n          padding: '1rem 1rem',\n          position: 'absolute',\n          left: x + 40,\n          top: y - 30,\n        }}\n      >\n        <big>\n          <b>{vehicleId}</b>\n        </big>\n        <div>Passagiere: {object.occ} </div>\n      </div>\n    )\n  }\n\n  if (settingsShowLayers.backgroundTraffic) {\n    // add the vehicle motion layer in each traffic layer\n    trafficLayers.forEach((layer: any, layerIndex: number) => {\n      // The entire layer can be hidden if all of its points\n      // are beyond the timeFilter range that is being shown.\n      const outOfRange =\n        layer.vehicles.t0[0] > simulationTime ||\n        layer.vehicles.t1[layer.vehicles.t1.length - 1] < simulationTime\n\n      // console.log(outOfRange)\n      layers.push(\n        //@ts-ignore\n        new MovingVehiclesLayer({\n          data: {\n            length: layer.vehicles.t0.length,\n            attributes: {\n              getTimeStart: { value: layer.vehicles.t0, size: 1 },\n              getTimeEnd: { value: layer.vehicles.t1, size: 1 },\n              getPathStart: { value: layer.vehicles.locO, size: 2 },\n              getPathEnd: { value: layer.vehicles.locD, size: 2 },\n            },\n          },\n          id: 'vehicles' + layerIndex,\n          // getIcon: (d: any) => 'vehicle',\n          getColor: [255, 32, 32], // (d: any) => props.colors[d.occ],\n          iconMoving: 'vehicle',\n          iconStill: 'diamond',\n          getSize: 20, // searchEnabled ? 56 : 44,\n          opacity: 1,\n          currentTime: simulationTime,\n          shadowEnabled: true,\n          iconAtlas: `${BASE_URL}/icon-atlas.png`,\n          iconMapping: ICON_MAPPING,\n          sizeScale: 1,\n          billboard: false,\n          pickable: true,\n          depthTest: true,\n          autoHighlight: false,\n          highlightColor: [255, 0, 255],\n          // onHover: setHoverInfo,\n          parameters: {\n            depthTest: false,\n          },\n          visible: !outOfRange,\n        })\n      )\n    })\n  }\n\n  if (settingsShowLayers.routes)\n    layers.push(\n      //@ts-ignore:\n      new PathTraceLayer({\n        id: 'Routen',\n        data: traces,\n        currentTime: simulationTime,\n        getSourcePosition: (d: any) => d.p0,\n        getTargetPosition: (d: any) => d.p1,\n        getTimeStart: (d: any) => d.t0,\n        getTimeEnd: (d: any) => d.t1,\n        getColor: (d: any) => props.colors[d.occ],\n        getWidth: 3, // (d: any) => 3.0 * (d.occ + 1) - 1,\n        opacity: 0.8,\n        widthMinPixels: 1,\n        rounded: false,\n        shadowEnabled: false,\n        searchFlag: searchEnabled ? 1.0 : 0.0,\n        pickable: true,\n        autoHighlight: true,\n        highlightColor: [255, 0, 255],\n        onHover: setHoverInfo,\n      })\n    )\n\n  if (settingsShowLayers.vehicles)\n    layers.push(\n      //@ts-ignore\n      new MovingIconsLayer({\n        id: 'Vehicles',\n        data: paths,\n        getPathStart: (d: any) => d.p0,\n        getPathEnd: (d: any) => d.p1,\n        getTimeStart: (d: any) => d.t0,\n        getTimeEnd: (d: any) => d.t1,\n        getIcon: (d: any) => 'vehicle',\n        getColor: (d: any) => props.colors[d.occ],\n        iconMoving: 'vehicle',\n        iconStill: 'diamond',\n        getSize: searchEnabled ? 128 : 128,\n        opacity: 1.0,\n        currentTime: simulationTime,\n        shadowEnabled: false,\n        noAlloc: true,\n        iconAtlas: `${BASE_URL}/icon-atlas.png`,\n        iconMapping: ICON_MAPPING,\n        sizeScale: 0.5,\n        billboard: false,\n        pickable: true,\n        depthTest: true,\n        autoHighlight: false,\n        highlightColor: [255, 0, 255],\n        onHover: setHoverInfo,\n        parameters: {\n          depthTest: false,\n        },\n      })\n    )\n\n  if (settingsShowLayers.requests)\n    layers.push(\n      //@ts-ignore:\n      new DrtRequestLayer({\n        id: 'DRT Requests',\n        data: drtRequests,\n        currentTime: simulationTime,\n        getSourcePosition: (d: any) => [d[DRT_REQUEST.fromX], d[DRT_REQUEST.fromY]],\n        getTargetPosition: (d: any) => [d[DRT_REQUEST.toX], d[DRT_REQUEST.toY]],\n        getTimeStart: (d: any) => d[DRT_REQUEST.time],\n        getTimeEnd: (d: any) => d[DRT_REQUEST.arrival],\n        getSourceColor: [0, 255, 64],\n        getTargetColor: [0, 255, 64],\n        getWidth: arcWidth,\n        opacity: 0.5,\n        searchFlag: searchEnabled ? 1.0 : 0.0,\n      })\n    )\n\n  return (\n    <DeckGL\n      layers={layers}\n      effects={theme.effects}\n      pickingRadius={5}\n      viewState={viewState}\n      controller={true}\n      getCursor={() => 'pointer'}\n      onClick={handleClick}\n      onViewStateChange={(e: any) => {\n        globalStore.commit('setMapCamera', e.viewState)\n      }}\n    >\n      {\n        /*\n        // @ts-ignore */\n        <StaticMap mapStyle={globalStore.getters.mapStyle} mapboxApiAccessToken={MAPBOX_TOKEN} />\n      }\n      {renderTooltip({ hoverInfo })}\n    </DeckGL>\n  )\n}\n","<template lang=\"pug\">\n.gl-app(:class=\"{'hide-thumbnail': !thumbnail}\"\n        :style='{\"background\": urlThumbnail}' oncontextmenu=\"return false\")\n\n  trip-viz.anim(v-if=\"!thumbnail\"\n                :center = \"vizDetails.center\"\n                :colors = \"COLOR_OCCUPANCY\"\n                :drtRequests = \"$options.drtRequests\"\n                :dark = \"globalState.isDarkMode\"\n                :paths = \"$options.paths\"\n                :settingsShowLayers = \"SETTINGS\"\n                :searchEnabled = \"searchEnabled\"\n                :simulationTime = \"simulationTime\"\n                :traces = \"$options.traces\"\n                :vehicleLookup = \"vehicleLookup\"\n                :viewId = \"viewId\"\n                :onClick = \"handleClick\"\n                :trafficLayers = \"trafficLayers\"\n  )\n\n  zoom-buttons(v-if=\"!thumbnail\")\n\n  .bottom-controls-mobile\n    .big.clock: p {{ myState.clock }}\n    legend-colors.legend-block(v-if=\"legendItems.length\" :mobile=\"true\"\n          :title=\"`${$t('passengers')}:`\" :items=\"legendItems\")\n    settings-panel.settings-area(:items=\"SETTINGS\" @click=\"handleSettingChange\")\n\n  .right-side(v-if=\"isLoaded && !thumbnail\")\n    collapsible-panel(direction=\"right\")\n      .big.clock: p {{ myState.clock }}\n\n      .panel-items\n        legend-colors.legend-block(v-if=\"legendItems.length\"\n          :title=\"`${$t('passengers')}:`\" :items=\"legendItems\")\n\n        legend-colors.legend-block(:title=\"`${$t('requests')}:`\" :items=\"legendRequests\" :mobile=\"false\")\n\n        settings-panel.settings-area(:items=\"SETTINGS\" @click=\"handleSettingChange\")\n\n        .speed-block\n          p.speed-label {{ $t('speed') }}:\n            br\n            | {{ speed }}x\n\n          b-slider.speed-slider(v-model=\"speed\"\n            :min=\"speedStops[0]\"\n            :max=\"speedStops[speedStops.length-1]\"\n            :duration=\"0\"\n            :dotSize=\"20\"\n            :tooltip=\"true\"\n            tooltip-placement=\"bottom\"\n            :tooltip-formatter=\"val => val + 'x'\"\n          )\n            template(v-for=\"val in speedStops\")\n              b-slider-tick(:value=\"val\" :key=\"val\")\n\n  playback-controls.bottom-area(v-if=\"!thumbnail && isLoaded\"\n      @click='toggleSimulation'\n      @time='setTime'\n      :timeStart = \"timeStart\"\n      :timeEnd = \"timeEnd\"\n      :isRunning = \"myState.isRunning\"\n      :currentTime = \"simulationTime\")\n\n</template>\n\n<script lang=\"ts\">\nconst i18n = {\n  messages: {\n    en: {\n      requests: 'DRT Requests',\n      passengers: 'Passengers',\n      search: 'Search',\n      showhide: 'Show/Hide',\n      vehicles: 'Vehicles',\n      routes: 'Routes',\n      speed: 'Speed',\n    },\n    de: {\n      requests: 'DRT Anfragen',\n      passengers: 'Passagiere',\n      search: 'Suche',\n      showhide: 'Ein-/Ausblenden',\n      vehicles: 'DRT Fahrzeuge',\n      routes: 'DRT Routen',\n      speed: 'Geschwindigkeit',\n    },\n  },\n}\n\nimport { defineComponent } from 'vue'\nimport { ToggleButton } from 'vue-js-toggle-button'\nimport readBlob from 'read-blob'\nimport YAML from 'yaml'\nimport crossfilter from 'crossfilter2'\nimport { blobToArrayBuffer, blobToBinaryString } from 'blob-util'\n\nimport globalStore from '@/store'\nimport CollapsiblePanel from '@/components/CollapsiblePanel.vue'\nimport LegendColors from './LegendColors'\nimport PlaybackControls from '@/components/PlaybackControls.vue'\nimport SettingsPanel from './SettingsPanel.vue'\nimport ZoomButtons from '@/components/ZoomButtons.vue'\nimport EventParser from './eventParser'\nimport DashboardDataManager, { NetworkLinks } from '@/js/DashboardDataManager'\nimport GzipFetcher from '@/workers/GzipFetcher.worker?worker'\nimport { arrayBufferToBase64, gUnzip } from '@/js/util'\n\nimport {\n  ColorScheme,\n  FileSystem,\n  LegendItem,\n  LegendItemType,\n  FileSystemConfig,\n  VisualizationPlugin,\n  LIGHT_MODE,\n  DARK_MODE,\n  REACT_VIEW_HANDLES,\n} from '@/Globals'\n\nimport TripViz from './TripViz'\nimport HTTPFileSystem from '@/js/HTTPFileSystem'\n\nconst MyComponent = defineComponent({\n  name: 'XmasVehicleAnimation',\n  i18n,\n  components: {\n    CollapsiblePanel,\n    SettingsPanel,\n    LegendColors,\n    TripViz,\n    PlaybackControls,\n    ToggleButton,\n    ZoomButtons,\n  },\n  props: {\n    root: { type: String, required: true },\n    subfolder: { type: String, required: true },\n    yamlConfig: String,\n    config: Object,\n    thumbnail: Boolean,\n  },\n  computed: {\n    fileApi(): HTTPFileSystem {\n      return new HTTPFileSystem(this.fileSystem, globalStore)\n    },\n    fileSystem(): FileSystemConfig {\n      const svnProject: FileSystemConfig[] = this.$store.state.svnProjects.filter(\n        (a: FileSystemConfig) => a.slug === this.root\n      )\n      if (svnProject.length === 0) {\n        console.log('no such project')\n        throw Error\n      }\n      return svnProject[0]\n    },\n\n    urlThumbnail(): any {\n      return this.thumbnailUrl\n    },\n\n    textColor(): any {\n      const lightmode = {\n        text: '#3498db',\n        bg: '#eeeef480',\n      }\n\n      const darkmode = {\n        text: 'white',\n        bg: '#181518aa',\n      }\n\n      return this.myState.colorScheme === ColorScheme.DarkMode ? darkmode : lightmode\n    },\n  },\n  data: () => {\n    const COLOR_OCCUPANCY = {\n      0: [140, 140, 160],\n      1: [20, 224, 224],\n      2: [240, 240, 40],\n      3: [240, 110, 30],\n      // 4: [192, 30, 50],\n    } as any\n\n    return {\n      viewId: Math.floor(1e12 * Math.random()),\n      COLOR_OCCUPANCY,\n      SETTINGS: {\n        vehicles: true,\n        backgroundTraffic: true,\n        routes: true,\n        requests: true,\n      } as any,\n      legendItems: Object.keys(COLOR_OCCUPANCY).map((key: string) => {\n        return { type: LegendItemType.line, color: COLOR_OCCUPANCY[key], value: key, label: key }\n      }),\n      legendRequests: [{ type: LegendItemType.line, color: [255, 0, 255], value: 0, label: '' }],\n      vizDetails: {\n        network: '',\n        drtTrips: '',\n        projection: '',\n        title: '',\n        description: '',\n        thumbnail: '',\n        center: [13.45, 52.5],\n        zoom: 12,\n        bearing: 0,\n        pitch: 20,\n        mapIsIndependent: false,\n        events: '',\n        eventBlobs: [] as string[],\n        theme: '',\n      },\n\n      myState: {\n        statusMessage: '',\n        clock: '00:00',\n        colorScheme: ColorScheme.DarkMode,\n        isRunning: false,\n        isShowingHelp: false,\n        subfolder: '',\n        yamlConfig: '',\n        thumbnail: false,\n        data: [] as any[],\n      },\n\n      timeStart: 0,\n      timeEnd: 86400,\n      traces: crossfilter([]) as crossfilter.Crossfilter<any>,\n      traceStart: null as crossfilter.Dimension<any, any> | null,\n      traceEnd: null as crossfilter.Dimension<any, any> | null,\n      traceVehicle: null as crossfilter.Dimension<any, any> | null,\n\n      paths: crossfilter([]) as crossfilter.Crossfilter<any>,\n      pathStart: null as crossfilter.Dimension<any, any> | null,\n      pathEnd: null as crossfilter.Dimension<any, any> | null,\n      pathVehicle: null as crossfilter.Dimension<any, any> | null,\n\n      requests: crossfilter([]) as crossfilter.Crossfilter<any>,\n      requestStart: null as crossfilter.Dimension<any, any> | null,\n      requestEnd: null as crossfilter.Dimension<any, any> | null,\n      requestVehicle: null as crossfilter.Dimension<any, any> | null,\n\n      simulationTime: 6 * 3600,\n      timeElapsedSinceLastFrame: 0,\n\n      searchTerm: '',\n      searchEnabled: false,\n\n      globalState: globalStore.state,\n      isDarkMode: globalStore.state.colorScheme === ColorScheme.DarkMode,\n      isLoaded: false,\n      showHelp: false,\n      speedStops: [-10, -5, -2, -1, -0.5, -0.25, 0, 0.25, 0.5, 1, 2, 5, 10],\n      speed: 1,\n\n      trafficLayers: [] as any[],\n      legendBits: [] as any[],\n      isEmbedded: false,\n      thumbnailUrl: \"url('assets/thumbnail.jpg') no-repeat;\",\n      vehicleLookup: [] as string[],\n      vehicleLookupString: {} as { [id: string]: number },\n      isPausedDueToHiding: false,\n    }\n  },\n  watch: {\n    '$store.state.viewState'() {\n      if (this.vizDetails.mapIsIndependent) return\n\n      if (!REACT_VIEW_HANDLES[this.viewId]) return\n      REACT_VIEW_HANDLES[this.viewId]()\n    },\n\n    async 'globalState.authAttempts'() {\n      console.log('AUTH CHANGED - Reload')\n      if (!this.yamlConfig) this.buildRouteFromUrl()\n      await this.getVizDetails()\n    },\n\n    'globalState.colorScheme'() {\n      this.isDarkMode = this.globalState.colorScheme === ColorScheme.DarkMode\n      this.updateLegendColors()\n    },\n\n    searchTerm() {\n      const vehicleNumber = this.vehicleLookupString[this.searchTerm]\n      if (vehicleNumber > -1) {\n        console.log('vehicle', vehicleNumber)\n        this.pathVehicle?.filterExact(vehicleNumber)\n        this.traceVehicle?.filterExact(vehicleNumber)\n        this.requestVehicle?.filterExact(vehicleNumber)\n        this.requestStart?.filterAll()\n        this.requestEnd?.filterAll()\n        this.searchEnabled = true\n      } else {\n        console.log('nope')\n        this.pathVehicle?.filterAll()\n        this.traceVehicle?.filterAll()\n        this.requestVehicle?.filterAll()\n        this.searchEnabled = false\n      }\n      this.updateDatasetFilters()\n    },\n  },\n  async mounted() {\n    globalStore.commit('setFullScreen', !this.thumbnail)\n\n    this.myState.thumbnail = this.thumbnail\n    this.myState.yamlConfig = this.yamlConfig || ''\n    this.myState.subfolder = this.subfolder\n\n    // EMBED MODE?\n    this.setEmbeddedMode()\n\n    await this.getVizDetails()\n\n    if (this.thumbnail) return\n\n    this.showHelp = false\n    this.updateLegendColors()\n\n    this.setWallClock()\n\n    this.myState.statusMessage = '/ Dateien laden...'\n    console.log('loading files')\n    const { trips, drtRequests } = await this.loadFiles()\n\n    console.log('parsing vehicle motion')\n    this.myState.statusMessage = `${this.$t('vehicles')}...`\n    this.paths = await this.parseVehicles(trips)\n    this.pathStart = this.paths.dimension((d: any) => d.t0)\n    this.pathEnd = this.paths.dimension((d: any) => d.t1)\n    this.pathVehicle = this.paths.dimension((d: any) => d.v)\n\n    console.log('Routes...')\n    this.myState.statusMessage = `${this.$t('routes')}...`\n    this.traces = await this.parseRouteTraces(trips)\n    this.traceStart = this.traces.dimension((d: any) => d.t0)\n    this.traceEnd = this.traces.dimension((d: any) => d.t1)\n    this.traceVehicle = this.traces.dimension((d: any) => d.v)\n\n    console.log('Requests...')\n    this.myState.statusMessage = `${this.$t('requests')}...`\n    this.requests = await this.parseDrtRequests(drtRequests)\n    this.requestStart = this.requests.dimension(d => d[0]) // time0\n    this.requestEnd = this.requests.dimension(d => d[6]) // arrival\n    this.requestVehicle = this.requests.dimension(d => d[5])\n\n    // ALSO load traffic in the background\n    this.loadBackgroundTraffic()\n\n    console.log('GO!')\n    this.myState.statusMessage = ''\n\n    document.addEventListener('visibilitychange', this.handleVisibilityChange, false)\n\n    this.myState.isRunning = true\n    this.timeElapsedSinceLastFrame = Date.now()\n    this.animate()\n  },\n  beforeDestroy() {\n    document.removeEventListener('visibilityChange', this.handleVisibilityChange)\n    globalStore.commit('setFullScreen', false)\n    this.$store.commit('setFullScreen', false)\n    this.myState.isRunning = false\n  },\n\n  methods: {\n    handleClick(vehicleNumber: any) {\n      // null means empty area clicked: clear map.\n      if (vehicleNumber === null) {\n        this.searchTerm = ''\n        return\n      }\n\n      const vehId = this.vehicleLookup[vehicleNumber]\n      console.log(vehId)\n\n      // set -- or clear -- search box!\n      if (this.searchTerm === vehId) this.searchTerm = ''\n      else this.searchTerm = vehId\n    },\n\n    updateLegendColors() {\n      // const theme = this.myState.colorScheme == ColorScheme.LightMode ? LIGHT_MODE : DARK_MODE\n      // this.legendBits = [\n      //   { label: 'susceptible', color: theme.susceptible },\n      //   { label: 'latently infected', color: theme.infectedButNotContagious },\n      //   { label: 'contagious', color: theme.contagious },\n      //   { label: 'symptomatic', color: theme.symptomatic },\n      //   { label: 'seriously ill', color: theme.seriouslyIll },\n      //   { label: 'critical', color: theme.critical },\n      //   { label: 'recovered', color: theme.recovered },\n      // ]\n    },\n\n    setWallClock() {\n      const hour = Math.floor(this.simulationTime / 3600)\n      const minute = Math.floor(this.simulationTime / 60) % 60\n      this.myState.clock = `${hour < 10 ? '0' : ''}${hour}${minute < 10 ? ':0' : ':'}${minute}`\n    },\n\n    setTime(seconds: number) {\n      this.simulationTime = seconds\n      this.setWallClock()\n\n      // only filter if search is disabled and we have data loaded already\n      if (this.traceStart && this.pathStart && this.requestStart) {\n        this.pathStart.filter([0, this.simulationTime])\n        this.pathEnd?.filter([this.simulationTime, Infinity])\n\n        // scrub vehicles if search is disabled\n        if (!this.searchEnabled) {\n          this.traceStart.filter([0, this.simulationTime])\n          this.traceEnd?.filter([this.simulationTime, Infinity])\n          this.requestStart.filter([0, this.simulationTime])\n          this.requestEnd?.filter([this.simulationTime, Infinity])\n        }\n      }\n\n      //@ts-ignore\n      this.$options.paths = this.paths.allFiltered()\n      //@ts-ignore\n      this.$options.traces = this.traces.allFiltered()\n      //@ts-ignore\n      this.$options.drtRequests = this.requests.allFiltered()\n    },\n\n    toggleSimulation() {\n      console.log('CLICK !!!')\n      this.myState.isRunning = !this.myState.isRunning\n      this.timeElapsedSinceLastFrame = Date.now()\n\n      // ok so, many times I mashed the play/pause wondering why things wouldn't\n      // start moving. Turns out a 0x speed is not very helpful! Help the user\n      // out and switch the speed up if they press play.\n      if (this.myState.isRunning && this.speed === 0.0) this.speed = 1.0\n\n      // and begin!\n      if (this.myState.isRunning) this.animate()\n    },\n\n    /** Load background traffic.\n     * If saved as binary chunks in eventBlobs, load them sequentially.\n     * If it's a raw MATSim event file, export the chunks after loading! */\n    async loadBackgroundTraffic() {\n      if (this.vizDetails.eventBlobs) {\n        for (const blobFilename of this.vizDetails.eventBlobs) {\n          const layer = await this.loadBackgroundChunk(blobFilename)\n          this.trafficLayers.push(layer)\n        }\n      } else if (this.vizDetails.events) {\n        const parser = new EventParser({\n          fileSystem: this.fileSystem as any,\n          dataManager: new DashboardDataManager(this.root, this.subfolder),\n          vizDetails: this.vizDetails,\n          subfolder: this.subfolder,\n          // boundBox: [\n          //   [11.2, 48.6],\n          //   [12.3, 49.1],\n          // ],\n        })\n        const layers = await parser.loadFiles()\n        this.trafficLayers = layers\n        this.exportJSON(layers)\n      }\n    },\n\n    /** Load one binary-encoded traffic chunk */\n    async loadBackgroundChunk(blobFilename: string): Promise<any> {\n      return new Promise((resolve, reject) => {\n        console.log('load chunk:', blobFilename)\n        const gzipFetcher = new GzipFetcher()\n        gzipFetcher.onmessage = (event: MessageEvent) => {\n          const floats = new Float32Array(event.data.buffer)\n          const size = floats.length / 6\n          const bytes = 4\n\n          const layer = {\n            vehicles: {\n              locO: new Float32Array(event.data.buffer, 0, size * 2),\n              locD: new Float32Array(event.data.buffer, bytes * size * 2, size * 2),\n              t0: new Float32Array(event.data.buffer, bytes * size * 4, size),\n              t1: new Float32Array(event.data.buffer, bytes * size * 5, size),\n            },\n          }\n          resolve(layer)\n        }\n        gzipFetcher.postMessage({\n          filePath: this.myState.subfolder + '/' + blobFilename,\n          fileSystem: this.fileSystem,\n        })\n      })\n    },\n\n    exportJSON(layers: any[]) {\n      for (const layer of layers) {\n        const blob = new Blob(\n          [layer.vehicles.locO, layer.vehicles.locD, layer.vehicles.t0, layer.vehicles.t1],\n          { type: 'octet/stream' }\n        )\n        const blobURL = URL.createObjectURL(blob)\n\n        let element = document.createElement('a')\n        element.setAttribute('href', blobURL)\n        element.setAttribute('download', 'events.blob')\n        element.style.display = 'none'\n        document.body.appendChild(element)\n\n        element.click()\n\n        document.body.removeChild(element)\n      }\n    },\n\n    setEmbeddedMode() {\n      if ('embed' in this.$route.query) {\n        console.log('EMBEDDED MODE')\n        this.isEmbedded = true\n        this.$store.commit('setShowLeftBar', false)\n        this.$store.commit('setFullWidth', true)\n      }\n    },\n\n    async handleSettingChange(label: string) {\n      console.log(label)\n      this.SETTINGS[label] = !this.SETTINGS[label]\n      this.updateDatasetFilters()\n      this.simulationTime += 1 // this will force a redraw\n    },\n\n    // this happens if viz is the full page, not a thumbnail on a project page\n    buildRouteFromUrl() {\n      const params = this.$route.params\n      if (!params.project || !params.pathMatch) {\n        console.log('I CANT EVEN: NO PROJECT/PARHMATCH')\n        return\n      }\n\n      // subfolder and config file\n      const sep = 1 + params.pathMatch.lastIndexOf('/')\n      const subfolder = params.pathMatch.substring(0, sep)\n      const config = params.pathMatch.substring(sep)\n\n      this.myState.subfolder = subfolder\n      this.myState.yamlConfig = config\n    },\n\n    async getVizDetails() {\n      console.log('GETVIZ')\n\n      // first get config\n      try {\n        // might be a project config:\n        const filename =\n          this.myState.yamlConfig.indexOf('/') > -1\n            ? this.myState.yamlConfig\n            : this.myState.subfolder + '/' + this.myState.yamlConfig\n\n        const text = await this.fileApi.getFileText(filename)\n        this.vizDetails = YAML.parse(text)\n      } catch (err) {\n        console.log('failed')\n        const e = err as any\n        // maybe it failed because password?\n        if (this.fileSystem.needPassword && e.status === 401) {\n          globalStore.commit('requestLogin', this.fileSystem.slug)\n        }\n      }\n\n      // initial view\n      if (this.vizDetails.theme) this.$store.commit('setTheme', this.vizDetails.theme)\n\n      if (this.vizDetails.center) {\n        this.$store.commit('setMapCamera', {\n          longitude: this.vizDetails.center[0],\n          latitude: this.vizDetails.center[1],\n          zoom: this.vizDetails.zoom || 11,\n          pitch: this.vizDetails.pitch || 20,\n          bearing: this.vizDetails.bearing || 0,\n          jump: true,\n        })\n      }\n\n      // title\n      const t = this.vizDetails.title ? this.vizDetails.title : 'Agent Animation'\n      this.$emit('title', t)\n\n      this.buildThumbnail()\n      this.isLoaded = true\n    },\n\n    async buildThumbnail() {\n      if (this.thumbnail && this.vizDetails.thumbnail) {\n        try {\n          const blob = await this.fileApi.getFileBlob(\n            this.myState.subfolder + '/' + this.vizDetails.thumbnail\n          )\n          const buffer = await readBlob.arraybuffer(blob)\n          const base64 = arrayBufferToBase64(buffer)\n          if (base64)\n            this.thumbnailUrl = `center / cover no-repeat url(data:image/png;base64,${base64})`\n        } catch (e) {\n          console.error(e)\n        }\n      }\n    },\n    async parseDrtRequests(requests: any[]) {\n      if (this.vehicleLookup.length) {\n        for (const request of requests) {\n          try {\n            request[5] = this.vehicleLookupString[request[5]]\n          } catch (e) {}\n        }\n      }\n\n      return crossfilter(requests)\n    },\n\n    async parseVehicles(trips: any[]) {\n      const allTrips: any[] = []\n      let vehNumber = -1\n\n      for (const trip of trips) {\n        const path = trip.path\n        const timestamps = trip.timestamps\n        const passengers = trip.passengers\n\n        // attach vehicle ID to each segment so we can click\n        vehNumber++\n        this.vehicleLookup[vehNumber] = trip.id\n        this.vehicleLookupString[trip.id] = vehNumber\n\n        for (let i = 0; i < trip.path.length - 1; i++) {\n          allTrips.push({\n            t0: timestamps[i],\n            t1: timestamps[i + 1],\n            p0: path[i],\n            p1: path[i + 1],\n            v: vehNumber,\n            occ: passengers[i],\n          })\n        }\n      }\n      return crossfilter(allTrips)\n    },\n\n    updateDatasetFilters() {\n      // dont' filter if we haven't loaded yet\n      if (!this.traceStart || !this.pathStart || !this.requestStart) return\n\n      // filter out all traces that havent started or already finished\n      if (this.SETTINGS.routes) {\n        if (this.searchEnabled) {\n          this.traceStart.filterAll()\n          this.traceEnd?.filterAll()\n        } else {\n          this.traceStart.filter([0, this.simulationTime])\n          this.traceEnd?.filter([this.simulationTime, Infinity])\n        }\n        //@ts-ignore\n        this.$options.traces = this.traces.allFiltered()\n      }\n\n      if (this.SETTINGS.vehicles) {\n        this.pathStart.filter([0, this.simulationTime])\n        this.pathEnd?.filter([this.simulationTime, Infinity])\n        //@ts-ignore:\n        this.$options.paths = this.paths.allFiltered()\n      }\n\n      if (this.SETTINGS.requests) {\n        if (this.searchEnabled) {\n          this.requestStart.filterAll()\n          this.requestEnd?.filterAll()\n        } else {\n          this.requestStart.filter([0, this.simulationTime])\n          this.requestEnd?.filter([this.simulationTime, Infinity])\n        }\n        //@ts-ignore\n        this.$options.drtRequests = this.requests.allFiltered()\n      }\n    },\n\n    animate() {\n      if (this.myState.isRunning) {\n        const elapsed = Date.now() - this.timeElapsedSinceLastFrame\n        this.timeElapsedSinceLastFrame += elapsed\n        this.simulationTime += elapsed * this.speed * 0.05\n\n        this.updateDatasetFilters()\n        this.setWallClock()\n        window.requestAnimationFrame(this.animate)\n      }\n    },\n\n    handleVisibilityChange() {\n      if (this.isPausedDueToHiding && !document.hidden) {\n        console.log('unpausing')\n        this.isPausedDueToHiding = false\n        this.toggleSimulation()\n      } else if (this.myState.isRunning && document.hidden) {\n        console.log('pausing')\n        this.isPausedDueToHiding = true\n        this.toggleSimulation()\n      }\n    },\n\n    // convert path/timestamp info into path traces we can use\n    async parseRouteTraces(trips: any[]) {\n      let countTraces = 0\n      let vehNumber = -1\n\n      const traces: any = []\n\n      for (const vehicle of trips) {\n        vehNumber++\n\n        let time = vehicle.timestamps[0]\n        let nextTime = vehicle.timestamps[0]\n\n        let segments: any[] = []\n\n        for (let i = 1; i < vehicle.path.length; i++) {\n          nextTime = vehicle.timestamps[i]\n\n          // same point? start of new path.\n          if (\n            vehicle.path[i][0] === vehicle.path[i - 1][0] &&\n            vehicle.path[i][1] === vehicle.path[i - 1][1]\n          ) {\n            segments.forEach(segment => {\n              segment.t1 = vehicle.timestamps[i - 1]\n            })\n\n            traces.push(...segments)\n\n            segments = []\n            time = nextTime\n          } else {\n            segments.push({\n              t0: time,\n              p0: vehicle.path[i - 1],\n              p1: vehicle.path[i],\n              v: vehNumber,\n              occ: vehicle.passengers[i - 1],\n            })\n          }\n        }\n\n        // save final segments\n        segments.forEach(segment => {\n          segment.t1 = nextTime\n        })\n        traces.push(...segments)\n      }\n\n      return crossfilter(traces)\n    },\n\n    async loadFiles() {\n      if (!this.fileApi) return { trips: [], drtRequests: {} }\n\n      let trips: any[] = []\n      let drtRequests: any = []\n\n      try {\n        if (this.vizDetails.drtTrips.endsWith('json')) {\n          const json = await this.fileApi.getFileJson(\n            this.myState.subfolder + '/' + this.vizDetails.drtTrips\n          )\n          trips = json.trips\n          drtRequests = json.drtRequests\n        } else if (this.vizDetails.drtTrips.endsWith('gz')) {\n          const blob = await this.fileApi.getFileBlob(\n            this.myState.subfolder + '/' + this.vizDetails.drtTrips\n          )\n          const buffer = await blob.arrayBuffer()\n          // recursively gunzip until it can gunzip no more:\n          const unzipped = gUnzip(buffer)\n\n          const text = new TextDecoder('utf-8').decode(unzipped)\n          const json = JSON.parse(text)\n          trips = json.trips\n          drtRequests = json.drtRequests\n        }\n      } catch (e) {\n        console.error(e)\n        this.myState.statusMessage = '' + e\n      }\n      return { trips, drtRequests }\n    },\n\n    toggleLoaded(loaded: boolean) {\n      this.isLoaded = loaded\n    },\n\n    rotateColors() {\n      this.myState.colorScheme =\n        this.myState.colorScheme === ColorScheme.DarkMode\n          ? ColorScheme.LightMode\n          : ColorScheme.DarkMode\n      localStorage.setItem('plugin/agent-animation/colorscheme', this.myState.colorScheme)\n    },\n  },\n})\n\nexport default MyComponent\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles.scss';\n\n.gl-app {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  display: grid;\n  pointer-events: none;\n  min-height: $thumbnailHeight;\n  background: url('assets/thumbnail.jpg') no-repeat;\n  background-size: cover;\n  grid-template-columns: 1fr min-content;\n  grid-template-rows: auto auto 1fr auto;\n  grid-template-areas:\n    'title         clock'\n    '.         rightside'\n    'playback  rightside'\n    'mobile      mobile';\n}\n\n.gl-app.hide-thumbnail {\n  background: none;\n}\n\n.nav {\n  z-index: 5;\n  grid-column: 1 / 4;\n  grid-row: 1 / 4;\n  box-shadow: 0px 2px 10px #22222266;\n  display: flex;\n  flex-direction: row;\n  margin: auto auto 0 0;\n  background-color: var(--bgPanel);\n  padding: 0rem 3rem;\n\n  a {\n    color: white;\n    text-decoration: none;\n\n    &.router-link-exact-active {\n      color: white;\n    }\n  }\n\n  p {\n    margin: auto 0.5rem auto 0;\n    font-weight: normal;\n    padding: 0 0;\n    color: var(--textFancy);\n  }\n}\n\n.speed-block {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n\n.legend-block {\n  margin-top: 1rem;\n}\n\n.speed-slider {\n  flex: 1;\n  width: 100%;\n  margin: 0.5rem 0.25rem 0.25rem 0rem;\n  padding: 0 0.5rem;\n  font-weight: bold;\n}\n\n.big {\n  padding: 0rem 0;\n  font-size: 2.5rem;\n  line-height: 3.75rem;\n  font-weight: bold;\n}\n\n.right-side {\n  width: 11rem;\n  grid-area: rightside;\n  display: flex;\n  flex-direction: column;\n  font-size: 0.8rem;\n  pointer-events: auto;\n  margin-top: auto;\n  margin-bottom: 35px;\n  z-index: 5;\n}\n\n.bottom-area {\n  grid-area: playback;\n  display: flex;\n  flex-direction: row;\n  margin-top: auto;\n  margin-bottom: 35px;\n  padding: 0.5rem 1rem;\n  pointer-events: auto;\n  width: 100%;\n}\n\n.settings-area {\n  z-index: 20;\n  pointer-events: auto;\n  font-size: 0.8rem;\n  padding: 0.25rem 0;\n  margin: 0.5rem 0rem 0 0;\n}\n\n.anim {\n  position: relative;\n  grid-column: 1 / 3;\n  grid-row: 1 / 4;\n  pointer-events: auto;\n}\n\n.speed-label {\n  font-size: 0.8rem;\n  font-weight: bold;\n}\n\n.clock {\n  color: white;\n  width: 100%;\n  background-color: #000000cc;\n  border: 3px solid white;\n  color: white;\n}\n\n.clock p {\n  text-align: center;\n  padding: 5px 1.5rem;\n}\n\n.tooltip {\n  padding: 5rem 5rem;\n  background-color: #ccc;\n}\n\n.panel-items {\n  margin: 0.5rem 0.5rem;\n  margin-bottom: 1rem;\n}\n\ninput {\n  border: none;\n  background-color: var(--bgCream);\n  color: #ccc;\n}\n\n.left-side {\n  grid-column: 1/4;\n  grid-row: 1/4;\n  display: flex;\n  flex-direction: column;\n  font-size: 0.8rem;\n  pointer-events: auto;\n  margin: 0 auto 0 0;\n  z-index: 1;\n}\n\n.bottom-controls-mobile {\n  display: none;\n  z-index: 2;\n  grid-column: 1 / 4;\n  grid-row: 4 / 5;\n  padding: 0 0.5rem;\n}\n\n@media only screen and (max-width: 640px) {\n  .right-side {\n    display: none;\n  }\n\n  .bottom-controls-mobile {\n    display: inherit;\n  }\n\n  .legend-block {\n    margin-top: 0;\n  }\n\n  .nav {\n    padding: 0.5rem 0.5rem;\n  }\n\n  .clock {\n    text-align: center;\n  }\n\n  .right-side {\n    font-size: 0.7rem;\n    margin-right: 0.25rem;\n  }\n\n  .big {\n    padding: 0 0rem;\n    margin-top: 0.5rem;\n    font-size: 1.3rem;\n    line-height: 2rem;\n  }\n\n  .side-section {\n    margin-left: 0;\n  }\n\n  .extra-buttons {\n    margin-right: 1rem;\n  }\n  .playback-stuff {\n    padding-right: 1rem;\n  }\n\n  .bottom-area {\n    margin-bottom: 32px;\n  }\n}\n</style>\n"],"names":["Component","props","regStyle","mobileStyle","listItems","React","item","i18n","_sfc_main","defineComponent","ToggleButton","EventParser","__publicField","HTTPFileSystem","network","linkIdLookup","filename","e","networkFilename","link","i","resolve","reject","finishedLoadingData","totalRows","data","MATSimEventStreamer","formatter","event","message","events","vehicleTrips","orig","dest","trip","offset","numTrips","tripData","defaultProps","DrtRequestArcLayer","ArcLayer","shaders","params","currentTime","DEFAULT_COLOR","IconLayer","Layer","vertShader","fragShader","project32","picking","IconManager","GL","oldProps","changeFlags","attributeManager","iconAtlas","iconMapping","getIcon","iconManager","iconMappingChanged","gl","_a","uniforms","sizeScale","sizeMinPixels","sizeMaxPixels","sizeUnits","billboard","alphaCutoff","iconStill","pickable","viewport","iconsTexture","positions","Model","Geometry","evt","onIconError","log","icon","rect","BASE_URL","ICON_MAPPING","ambientLight","AmbientLight","pointLight","PointLight","lightingEffect","LightingEffect","DEFAULT_THEME","DRT_REQUEST","simulationTime","paths","traces","drtRequests","settingsShowLayers","center","dark","vehicleLookup","searchEnabled","onClick","viewId","trafficLayers","theme","viewState","setViewState","useState","globalStore","REACT_VIEW_HANDLES","arcWidth","hoverInfo","setHoverInfo","layers","handleClick","renderTooltip","object","x","y","vehicleId","layer","layerIndex","outOfRange","MovingVehiclesLayer","PathTraceLayer","d","MovingIconsLayer","DrtRequestLayer","DeckGL","StaticMap","MAPBOX_TOKEN","MyComponent","CollapsiblePanel","SettingsPanel","LegendColors","TripViz","PlaybackControls","ZoomButtons","svnProject","a","lightmode","darkmode","ColorScheme","COLOR_OCCUPANCY","key","LegendItemType","crossfilter","vehicleNumber","_b","_c","_d","_e","_f","_g","_h","trips","vehId","hour","minute","seconds","blobFilename","DashboardDataManager","gzipFetcher","GzipFetcher","size","bytes","blob","blobURL","element","label","sep","subfolder","config","text","YAML","err","t","buffer","readBlob","base64","arrayBufferToBase64","requests","request","allTrips","vehNumber","path","timestamps","passengers","elapsed","vehicle","time","nextTime","segments","segment","json","unzipped","gUnzip","loaded"],"mappings":"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"}