import{b as Y,r as E,g as z,k as F,R as _,M as Q,d as Z,q as I,D as tt,n as et}from"./index-24c2379b.js";import{r as st}from"./index-e24927de.js";import{c as W}from"./turf.es-8ac32224.js";import{D as it,c as at,a as ot}from"./DashboardDataManager-9bea9fc4.js";import{r as rt}from"./index-48474e4a.js";import{G as nt,M as lt,r as dt}from"./ModalIdColumnPicker-cf633da6.js";import{y as B}from"./index-719eff74.js";import{N as j,O as ct,M as U}from"./ColorsAndWidths-1801eb2f.js";import{D as ht,S as ut}from"./set-rtl-text-plugin-40f27fec.js";import{O as ft}from"./LineOffsetLayer-12ec46f2.js";import{s as mt,B as pt}from"./screenshots-b8b183dc.js";import{r as J}from"./cubehelix-25f71112.js";import{G as gt}from"./geojson-layer-4489d197.js";import{D as yt}from"./data-filter-8aa14a06.js";import{V as bt}from"./VizConfigurator-95c9391d.js";import{L as Ct}from"./LegendBox-11257845.js";import{Z as vt}from"./ZoomButtons-85071e8e.js";import{D as Dt}from"./DrawingTool-6c6ed265.js";import{H as wt}from"./HTTPFileSystem-017e7593.js";import{a as Lt}from"./util-8430d78c.js";import{C as O}from"./Coords-23d23a7c.js";import{L as Ft}from"./LegendStore-3aadd543.js";import{g as kt}from"./group-f6e6d4c5.js";import{z as xt}from"./zip-96e4f4e1.js";import{s as $t}from"./sum-2c3bc3a6.js";import{s as St}from"./sequential-ed776364.js";import"./RoadNetworkLoader.worker-ba4f3b4d.js";import"./PathOffsetLayer-df4f8747.js";import"./path-layer-7a20967b.js";import"./layer-7bd8a07e.js";import"./rainbow-3c4177eb.js";import"./threshold-576e5497.js";import"./index-f6506551.js";import"./line-layer-c1ce1a7a.js";import"./text-layer-98e63af8.js";import"./layer-extension-7e1876a6.js";import"./lodash-ce477bae.js";import"./FileSelector-7d478347.js";import"./index-83bc819c.js";import"./fxp-b80b6d05.js";import"./min-7292b72b.js";import"./pow-b8eeaab1.js";import"./round-06ec6168.js";function Nt(e){return e>=55296&&e<=56319}function jt(e){return e>=56320&&e<=57343}var zt=function(t,i,s){if(typeof i!="string")throw new Error("Input must be string");for(var a=i.length,o=0,r,n,l=0;l<a;l+=1){if(r=i.charCodeAt(l),n=i[l],Nt(r)&&jt(i.charCodeAt(l+1))&&(l+=1,n+=i[l]),o+=t(n),o===s)return i.slice(0,l+1);if(o>s)return i.slice(0,l-n.length+1)}return i};function Tt(e){return e>=55296&&e<=56319}function It(e){return e>=56320&&e<=57343}var Et=function(t){if(typeof t!="string")throw new Error("Input must be string");for(var i=t.length,s=0,a=null,o=null,r=0;r<i;r++)a=t.charCodeAt(r),It(a)?o!=null&&Tt(o)?s+=1:s+=3:a<=127?s+=1:a>=128&&a<=2047?s+=2:a>=2048&&a<=65535&&(s+=3),o=a;return s},Ot=zt,Mt=Et,Vt=Ot.bind(null,Mt),Wt=Vt,Jt=/[\/\?<>\\:\*\|"]/g,At=/[\x00-\x1f\x80-\x9f]/g,Pt=/^\.+$/,Rt=/^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\..*)?$/i,_t=/[\. ]+$/;function H(e,t){if(typeof e!="string")throw new Error("Input must be string");var i=e.replace(Jt,t).replace(At,t).replace(Pt,t).replace(Rt,t).replace(_t,t);return Wt(i,255)}var Bt=function(e,t){var i=t&&t.replacement||"",s=H(e,i);return i===""?s:H(s,"")};const Ut=Y(Bt);function Ht({viewId:e=0,fillColors:t="#59a14f",lineColors:i="#4e79a7",lineWidths:s=0,fillHeights:a=0,opacity:o=1,pointRadii:r=4,screenshot:n=0,redraw:l=0,featureFilter:h=new Float32Array(0),cbTooltip:d={},bgLayers:u={},handleClickEvent:f={},highlightedLinkIndex:c=-1}){const[m,y]=E.useState([]),[w,D]=E.useState(z.state.viewState),[C,x]=E.useState(n),$=E.useRef();F[e]=()=>{D(z.state.viewState)},F[1e3+e]=p=>{const g=p.map(S=>{const T={type:""+S.type,geometry:JSON.parse(JSON.stringify(S.geometry)),properties:JSON.parse(JSON.stringify((S==null?void 0:S.properties)||{}))};return"id"in S&&(T.id=""+S.id),T});y(g)};let v=n>C,b;if(typeof t=="string"){const p=J(t);b=[p.r,p.g,p.b]}else b=(p,g)=>[t[g.index*3+0],t[g.index*3+1],t[g.index*3+2],255];const k=!!i;let L;if(typeof i=="string"){const p=J(i);L=[p.r,p.g,p.b],k||L.push(0)}else L=(p,g)=>m[g.index].properties._hide?[0,0,0,0]:[i[g.index*3+0],i[g.index*3+1],i[g.index*3+2],255];let N;typeof s=="number"?N=s:N=(p,g)=>s[g.index];let M;typeof r=="number"?M=r:M=(p,g)=>r[g.index];let V;typeof a=="number"?V=a:V=(p,g)=>a[g.index];function q(p){p.latitude&&(p.center=[p.longitude,p.latitude],D(p),z.commit("setMapCamera",p))}function G(p){f&&f(p)}function K({object:p,index:g}){d&&d(g,p)}const A=[],P=[];for(const p of Object.keys(u).reverse()){const g=u[p],S=new gt({id:`background-layer-${p}`,data:g.features,getFillColor:T=>T.properties.__fill__,getLineColor:g.borderColor,getLineWidth:g.borderWidth,getText:T=>T.properties.label,getTextSize:12,getTextColor:[255,255,255,255],getTextBackgroundColor:[0,0,0,255],pointType:"circle+text",textFontWeight:"bold",lineWidthUnits:"pixels",autohighlight:!1,opacity:g.opacity,pickable:!1,stroked:!!g.borderWidth,fp64:!1,parameters:{depthTest:!1},visible:g.visible});g.onTop?P.push(S):A.push(S)}const X=new nt({id:"geoJsonOffsetLayer",data:m,getLineWidth:N,getLineColor:L,getFillColor:b,getPointRadius:M,getElevation:V,extruded:!!a,highlightedObjectIndex:c,highlightColor:[255,0,224],lineWidthUnits:"pixels",lineWidthScale:1,lineWidthMinPixels:typeof s=="number"?0:1,lineWidthMaxPixels:50,getOffset:ft.RIGHT,opacity:a?1:.8,pickable:!0,pointRadiusUnits:"pixels",pointRadiusMinPixels:2,stroked:k,useDevicePixels:v,fp64:!1,updateTriggers:{getFillColor:t,getLineColor:i,getLineWidth:s,getPointRadius:r,getElevation:a,getFilterValue:h},transitions:{getFillColor:300,getLineColor:300,getLineWidth:300,getPointRadius:300},parameters:{depthTest:!!a,fp64:!1},glOptions:{preserveDrawingBuffer:!0,fp64:!1},extensions:[new yt({filterSize:1})],filterRange:[0,1],getFilterValue:(p,g)=>h[g.index]}),R=_.createElement(ht,{layers:[...A,X,...P],viewState:w,controller:!0,pickingRadius:4,getTooltip:K,onClick:G,onViewStateChange:p=>q(p.viewState),getCursor:({isDragging:p,isHovering:g})=>p?"grabbing":g?"pointer":"grab",onAfterRender:async()=>{var p;n>C&&(await mt.savePNG(R.props.layers[0],(p=$==null?void 0:$.current)==null?void 0:p.getMap()._canvas),x(n))}},_.createElement(ut,{mapStyle:z.getters.mapStyle,mapboxApiAccessToken:Q}));return R}const qt=Z({name:"ShapeFilePlugin",components:{BackgroundMapOnTop:pt,LegendBox:Ct,GeojsonLayer:Ht,ModalIdColumnPicker:lt,VizConfigurator:bt,ZoomButtons:vt,DrawingTool:Dt},props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},datamanager:{type:Object},configFromDashboard:{type:Object},yamlConfig:String,thumbnail:Boolean},data(){return{avroNetwork:null,isAvroFile:!1,isDraggingDivider:0,isDragHappening:!1,dragStartWidth:200,legendSectionWidth:200,boundaries:[],centroids:[],cbDatasetJoined:void 0,legendStore:new Ft,chosenNewFilterColumn:"",boundaryDataTable:{},dataFillColors:"#888",dataLineColors:"",dataLineWidths:1,dataPointRadii:5,dataFillHeights:0,dataCalculatedValues:null,dataNormalizedValues:null,constantLineWidth:null,dataCalculatedValueLabel:"",globalStore:z,globalState:z.state,layerId:Math.floor(1e12*Math.random()),activeColumn:"",useCircles:!1,sliderOpacity:100,maxValue:1e3,expColors:!1,isLoaded:!1,isAreaMode:!0,statusText:"Loading...",filters:{},needsInitialMapExtent:!0,datasetJoinColumn:"",featureJoinColumn:"",triggerScreenshot:0,redraw:0,datasetKeyToFilename:{},datasetJoinSelector:{},showJoiner:!1,showLegend:!0,myDataManager:this.datamanager||new it(this.root,this.subfolder),config:{},currentUIFilterDefinitions:{},currentUIFillColorDefinitions:{},currentUILineColorDefinitions:{},filterDefinitions:[],isEmbedded:!1,resizer:null,boundaryFilters:new Float32Array(0),thumbnailUrl:"url('assets/thumbnail.jpg') no-repeat;",boundaryJoinLookups:{},datasetValuesColumn:"",tooltipHtml:"",tooltipIsFixed:!1,highlightedLinkIndex:-1,bgLayers:{},vizDetails:{title:"",description:"",datasets:{},useSlider:!1,showDifferences:!1,shpFile:"",dbfFile:"",network:"",geojsonFile:"",projection:"",widthFactor:null,thumbnail:"",sum:!1,filters:[],shapes:"",zoom:null,center:null,pitch:null,bearing:null,display:{fill:{},fillHeight:{},color:{},width:{},lineColor:{},lineWidth:{},radius:{}},tooltip:[],backgroundLayers:{}},datasets:{}}},computed:{fileApi(){return new wt(this.fileSystem,z)},fileSystem(){const e=this.$store.state.svnProjects.filter(t=>t.slug===this.root);if(e.length===0)throw console.log("no such project"),Error;return e[0]},configuratorSections(){return this.isAreaMode?["fill-color","fill-height","line-color","line-width","circle-radius","layers","filters"]:["line-color","line-width","layers","filters"]},datasetChoices(){return Object.keys(this.datasets)},generatedExportFilename(){let e=Ut(this.yamlConfig??"");return e=e.replaceAll(" ","-"),e.startsWith("viz-map-")||(e="viz-map-"+e),!e.endsWith(".yml")&&!e.endsWith(".yaml")&&(e=e+".yaml"),e},urlThumbnail(){return this.thumbnailUrl}},watch:{"globalState.viewState"(){F[this.layerId]&&F[this.layerId]()},"globalState.colorScheme"(){this.$nextTick().then(e=>{const t=this.vizDetails.tooltip||[];this.vizDetails.tooltip=[...t]})}},methods:{dividerDragStart(e){console.log("dragStart",e),this.isDraggingDivider=e.clientX,this.dragStartWidth=this.legendSectionWidth},dividerDragEnd(e){this.isDraggingDivider=0},dividerDragging(e){if(!this.isDraggingDivider)return;const t=this.isDraggingDivider-e.clientX;this.legendSectionWidth=Math.max(0,this.dragStartWidth+t)},takeScreenshot(){this.triggerScreenshot++},setEmbeddedMode(){"embed"in this.$route.query&&(console.log("EMBEDDED MODE"),this.isEmbedded=!0,this.$store.commit("setShowLeftBar",!1),this.$store.commit("setFullWidth",!0))},setupLogoMover(){this.resizer=new ResizeObserver(this.moveLogo);const e=document.getElementById(`container-${this.layerId}`);e&&this.resizer.observe(e)},moveLogo(){const e=document.getElementById(`container-${this.layerId}`),t=e==null?void 0:e.querySelector(".mapboxgl-ctrl-bottom-left");if(t){const i=e.clientWidth>640?"280px":"36px";t.style.right=i}},columnsInDataset(e){const t=this.datasets[e];return Object.keys(t)},filterShapesNow(){const e=this.filterDefinitions.filter(i=>i.dataset==="shapes");if(this.boundaryFilters=new Float32Array(this.boundaries.length),!e.length)return;const t=/^(<|>)/;for(const i of e){let s=i.value,a="";if(s=="@categorical")a="@categorical",s="";else if(t.test(s))s.startsWith("<=")?(a="<=",s=parseFloat(s.substring(2).trim())):s.startsWith(">=")?(a=">=",s=parseFloat(s.substring(2).trim())):s.startsWith("<")?(a="<",s=parseFloat(s.substring(1).trim())):s.startsWith(">")&&(a=">",s=parseFloat(s.substring(1).trim()));else if(typeof s=="string")if(s.indexOf(",")>-1)s=s.split(",").map(n=>n.trim()).map(n=>Number.isNaN(parseFloat(n))?n:parseFloat(n));else{const n=parseFloat(s);Number.isNaN(n)||(s=n)}Array.isArray(s)||(s=[s]);const o={conditional:a,invert:i.invert||!1,values:s},r=this.boundaryDataTable[i.column].values;for(let n=0;n<this.boundaries.length;n++)at(o,r[n])||(this.boundaryFilters[n]=-1)}},truncateFractionalPart(e,t){if(typeof e!="number")return e;let i=""+e;return i.includes(".")&&i.indexOf(".")===i.lastIndexOf(".")&&/\d$/.test(i)?i.substring(0,1+t+i.lastIndexOf(".")):e},async handleClickEvent(e){e.index!=-1?(this.cbTooltip(e.index,e,!0),this.tooltipIsFixed=!0):(this.tooltipIsFixed=!1,this.highlightedLinkIndex=-1,this.tooltipHtml="")},cbTooltip(e,t,i=!1){var u,f;if(this.tooltipIsFixed&&!i)return;this.highlightedLinkIndex=e;const s=4;if(t===null||!((u=this.boundaries[e])!=null&&u.properties)){this.tooltipHtml="";return}const a=[];if(this.dataNormalizedValues){const c=this.dataCalculatedValueLabel??"Normalized Value";let m=this.truncateFractionalPart(this.dataNormalizedValues[e],s);a.push(`<tr><td style="text-align: right; padding-right: 0.5rem;">${c}</td><td><b>${m}</b></td></tr>`)}if(this.dataCalculatedValues){let c=this.dataCalculatedValueLabel??"Value";const m=this.dataNormalizedValues?c.substring(0,c.lastIndexOf("/")):c;let y=this.truncateFractionalPart(this.dataCalculatedValues[e],s);this.dataCalculatedValueLabel.startsWith("%")&&(y=`${y} %`),a.push(`<tr><td style="text-align: right; padding-right: 0.5rem;">${m}</td><td><b>${y}</b></td></tr>
         <tr><td>&nbsp;</td></tr>`)}let o="";const r=Object.entries(this.boundaries[e].properties);for(const[c,m]of r){if(m===null)continue;let y=this.truncateFractionalPart(m,s);o+=`<tr><td style="text-align: right; padding-right: 0.5rem;">${c}</td><td><b>${y}</b></td></tr>`}o&&a.push(o);let n=Object.keys(this.boundaryDataTable);(f=this.vizDetails.tooltip)!=null&&f.length&&(n=this.vizDetails.tooltip.map(c=>c.substring(c.indexOf(":")+1)));let l="";if(n.forEach(c=>{if(this.boundaryDataTable[c]){let m=this.boundaryDataTable[c].values[e];if(m==null)return;typeof m=="number"&&(m=this.truncateFractionalPart(m,s)),l+=`<tr><td style="text-align: right; padding-right: 0.5rem;">${c}</td><td><b>${m}</b></td></tr>`}}),l&&a.push(l),!a.length){this.tooltipHtml="";return}const d=`<table>${a.join("")}</table>`;this.tooltipHtml=d},filterShapesNowOriginal(){const e=this.filterDefinitions.filter(t=>t.dataset==="shapes");if(this.boundaryFilters=new Float32Array(this.boundaries.length),!!e.length)for(let t=0;t<this.boundaries.length;t++)for(const i of e)!this.checkIsFiltered(t,i)&&(this.boundaryFilters[t]=-1)},checkIsFiltered(e,t){const s=(t.dataset=="shapes"?this.boundaryDataTable:this.datasets[t.dataset])[t.column].values[e];let a=!1,o=t.value;return typeof o=="string"&&o.indexOf(",")>-1&&(o=o.split(",").map(r=>r.trim()).map(r=>isNaN(parseFloat(r))?r:parseFloat(r))),Array.isArray(o)?a=o.indexOf(s)>-1:a=o==s,t.invert&&(a=!a),a},parseFilterDefinitions(e){if(!e)return[];const t=[];let i;Array.isArray(e)?i=e.map(s=>Object.entries(s)[0]):i=Object.entries(e);for(const s of i){const[a,o]=s,[r,n]=a.split("."),l={dataset:r,value:o,column:n.endsWith("!")?n.substring(0,n.length-1):n,invert:n.endsWith("!")};t.push(l)}return t},honorQueryParameters(){this.$route.query.show=="dots"&&(this.useCircles=!0)},setupQueryFilters(){const e=Object.keys(this.datasets);if(e.length!==2)return;const t=e[1],i=this.datasets[t],s=Object.keys(i),a=Object.keys(this.$route.query).filter(o=>s.indexOf(o)>-1);for(const o of a){this.filters[o]||(console.log("CREATING category filter:",o),this.handleUserCreatedNewFilter(`${t}:${o}`));const r=""+this.$route.query[o];r&&(this.filters[o].active=r.split(",")),this.myDataManager.setFilter({dataset:this.datasetKeyToFilename[t],column:o,value:this.filters[o].active}),this.activateFiltersForDataset(t)}},convertCommasToArray(e){return e===void 0?[]:(Array.isArray(e)||(e.indexOf(",")>-1?e=e.split(",").map(t=>t.trim()):e=[e.trim()]),e)},async getVizDetails(){const e={datasets:{},display:{fill:{}}};if(this.configFromDashboard)this.config=JSON.parse(JSON.stringify(this.configFromDashboard)),this.vizDetails=Object.assign({},e,this.configFromDashboard);else{const i=(this.yamlConfig??"").toLocaleLowerCase();if(i!=null&&i.endsWith("yaml")||i!=null&&i.endsWith("yml")){const s=await this.loadYamlConfig();this.config=s,this.vizDetails=Object.assign({},e,s)}if(/(network\.xml)(|\.gz)$/.test(i)||/(\.geojson)(|\.gz)$/.test(i)||/\.shp$/.test(i)||/network\.avro$/.test(i)){const s=`${i.endsWith("shp")?"Shapefile":"File"}: ${this.yamlConfig}`;this.vizDetails=Object.assign({},e,this.vizDetails,{title:s,description:this.subfolder,shapes:this.yamlConfig}),this.config=JSON.parse(JSON.stringify(this.vizDetails))}}this.vizDetails.backgroundLayers||(this.vizDetails.backgroundLayers={});const t=this.vizDetails.title||"Map";this.$emit("title",t)},buildOldJoinLookups(){const e={};for(const t of Object.keys(this.vizDetails.datasets||[])){const i=this.vizDetails.datasets[t].join;if(!i)continue;const s=i.indexOf(":");if(e[t]=i.substring(s+1),typeof this.vizDetails.shapes=="string"){const a=s>-1?i.substring(0,s):i;this.vizDetails.shapes={file:this.vizDetails.shapes,join:a}}}for(const t of Object.keys(this.vizDetails.display||[])){const s=this.vizDetails.display[t];(s.dataset||s.diff)&&!s.join&&(s.join=e[s.dataset])}},async buildThumbnail(){if(this.thumbnail&&this.vizDetails.thumbnail)try{const e=await this.fileApi.getFileBlob(this.subfolder+"/"+this.vizDetails.thumbnail),t=await rt.arraybuffer(e),i=Lt(t);i&&(this.thumbnailUrl=`center / cover no-repeat url(data:image/png;base64,${i})`)}catch(e){console.error(e)}},getFileSystem(e){const t=this.$store.state.svnProjects.filter(i=>i.slug===e);if(t.length===0)throw console.log("no such project"),Error;return t[0]},async loadYamlConfig(){const e=this.yamlConfig??"",t=e.indexOf("/")>-1?e:this.subfolder+"/"+e;try{const s=await this.fileApi.getFileText(t);return B.parse(s)}catch(s){const a=""+s;a.startsWith("YAMLSemantic")&&this.$emit("error",`${t}: ${a}`),console.log(`${t} not found, trying config folders`)}const{vizes:i}=await this.fileApi.findAllYamlConfigs(this.subfolder);if(i[e])try{const s=await this.fileApi.getFileText(i[e]);return B.parse(s)}catch{console.error(`Also failed to load ${i[e]}`)}this.$emit("error","Could not load YAML: "+t)},changeConfiguration(e){try{e.fill&&(this.vizDetails.display.fill=e.fill,this.handleNewFillColor(e.fill)),e.fillHeight&&(this.vizDetails.display.fillHeight=e.fillHeight,this.handleNewFillHeight(e.fillHeight)),e.lineColor&&(this.vizDetails.display.lineColor=e.lineColor,this.handleNewLineColor(e.lineColor)),e.lineWidth&&(this.vizDetails.display.lineWidth=e.lineWidth,this.handleNewLineWidth(e.lineWidth),this.currentUILineColorDefinitions&&this.handleNewLineColor(this.currentUILineColorDefinitions)),e.radius&&(this.vizDetails.display.radius=e.radius,this.handleNewRadius(e.radius)),e.dataset&&this.handleNewDataset(e.dataset),e.layers&&this.handleNewLayers(e.layers),e.filters&&this.handleNewFilters(e.filters)}catch(t){this.$emit("error",""+t)}},handleNewLayers(e){const t={};for(const i of e){const{title:s,...a}=i;t[s]=a}this.vizDetails.backgroundLayers=t;try{this.loadBackgroundLayers(),this.bgLayers={...this.bgLayers}}catch(i){console.error("Error handling layers, check filenames and parameters: "+i)}},async handleNewDataset(e){const{key:t,dataTable:i,filename:s}=e,a=t,o=s||a;if(console.log("HANDLE NEW DATASET:",a,o),!this.boundaryDataTable[this.featureJoinColumn])throw Error(`Geodata does not have property ${this.featureJoinColumn}`);this.myDataManager.setPreloadedDataset({key:this.datasetKeyToFilename[a],dataTable:i}),this.myDataManager.addFilterListener({dataset:this.datasetKeyToFilename[a]},this.processFiltersNow),this.vizDetails.datasets[a]={file:o},this.vizDetails=Object.assign({},this.vizDetails),this.datasets[a]=i,this.datasets=Object.assign({},this.datasets)},setupJoin(e){const{dataTable:t,datasetId:i,dataJoinColumn:s}=e;if(!s||`@@${s}`in t)return;if(!this.boundaryDataTable[this.featureJoinColumn])throw Error(`Geodata does not have property ${this.featureJoinColumn}`);if(!t[s])throw Error(`Dataset ${i} does not have column ${s}`);const a={type:I.LOOKUP,values:[],name:`@@${s}`},o=t[s].values,r=this.getBoundaryOffsetLookup(this.featureJoinColumn);for(let n=0;n<o.length;n++){const l=r[o[n]];a.values[n]=l}t[`@@${s}`]=a,this.myDataManager.setPreloadedDataset({key:this.datasetKeyToFilename[i],dataTable:t}),this.vizDetails.datasets[i]={file:this.datasetKeyToFilename[i],join:this.featureJoinColumn===s?this.featureJoinColumn:`${this.featureJoinColumn}:${s}`},this.myDataManager.addFilterListener({dataset:this.datasetKeyToFilename[i]},this.processFiltersNow),this.prepareTooltipData(e),F[1e3+this.layerId]&&F[1e3+this.layerId](this.boundaries),this.datasets[i]=t},prepareTooltipData(e){const{dataTable:t,datasetId:i,dataJoinColumn:s}=e,o=(this.vizDetails.tooltip||[]).filter(l=>l.substring(0,l.indexOf(":")).startsWith(i)).map(l=>({id:l,column:l.substring(1+l.indexOf(":"))}));if(!o.length)return;const r=t[s].values,n=this.getBoundaryOffsetLookup(this.featureJoinColumn);for(const l of o){if(!t[l.column]){this.$emit("error",`Tooltip references "${l.id}" but that column doesn't exist`);continue}for(let h=0;h<r.length;h++){const d=n[r[h]],u=this.boundaries[d],f=t[l.column].values[h];u&&(u.properties[l.id]=f)}}},getBoundaryOffsetLookup(e){if(this.boundaryJoinLookups[e])return this.boundaryJoinLookups[e];try{this.statusText="Joining datasets...",this.boundaryJoinLookups[e]={};const t=this.boundaryJoinLookups[e],i=this.boundaryDataTable[e].values;for(let s=0;s<this.boundaries.length;s++)t[i[s]]=s;return this.statusText="",t}catch{return console.warn("waahaa"),{}}},removeAnyOldFilters(e){const t=new Set(Object.keys(this.currentUIFilterDefinitions).filter(s=>!s.startsWith("shapes.")));new Set(Object.keys(e).filter(s=>!s.startsWith("shapes."))).forEach(s=>t.delete(s));for(const s of t){console.log("REMOVING",s);const a=s.indexOf("."),o=s.slice(0,a),r=s.slice(a+1);if(this.myDataManager.setFilter({dataset:this.datasetKeyToFilename[o],column:r,value:[]}),r in this.filters){const n=Object.assign({},this.$route.query);delete n[r],this.$router.replace({query:n}),delete this.filters[r]}}},async handleNewFilters(e){this.removeAnyOldFilters(e),this.currentUIFilterDefinitions=e;const t=this.parseFilterDefinitions(e);this.filterDefinitions=t,this.filterShapesNow(),Object.keys(this.datasets).forEach(async(i,s)=>{s!==0&&(await this.activateFiltersForDataset(i),this.processFiltersNow(i))})},handleColorDiffMode(e,t){var h,d,u,f,c;if(!t.diffDatasets)return;const i=t.columnName,s=t.join||"",a=t.diffDatasets[0]||"",o=this.datasets[a],r=t.diffDatasets[1]||"",n=this.datasets[r],l=!!t.relative;if(o&&n){this.setupJoin({datasetId:a,dataTable:o,dataJoinColumn:s}),this.setupJoin({datasetId:r,dataTable:n,dataJoinColumn:s});const m=o[`@@${s}`],y=n[`@@${s}`],w=o[i],D=n[i];if(!w)throw Error(`Dataset ${a} does not contain column "${i}"`);if(!D)throw Error(`Dataset ${r} does not contain column "${i}"`);let C,x;if(t.normalize){const[L,N]=t.normalize.split(":");if(!this.datasets[L]||!this.datasets[L][N])throw Error(`${L} does not contain column "${N}"`);this.dataCalculatedValueLabel+=`/ ${N}`,C=this.datasets[L][N],this.datasetChoices[0]!==L&&(this.setupJoin({datasetId:L,dataTable:this.datasets[L],dataJoinColumn:s}),x=this.datasets[L][`@@${s}`])}const $={ramp:((h=t.colorRamp)==null?void 0:h.ramp)||"Viridis",style:((d=t.colorRamp)==null?void 0:d.style)||0,reverse:((u=t.colorRamp)==null?void 0:u.reverse)||!1,steps:((f=t.colorRamp)==null?void 0:f.steps)||9,breakpoints:(c=t.colorRamp)==null?void 0:c.breakpoints},{rgbArray:v,legend:b,calculatedValues:k}=j.getColorsForDataColumn({numFeatures:this.boundaries.length,data:w,data2:D,lookup:m,lookup2:y,normalColumn:C,normalLookup:x,options:{colorRamp:$,fixedColors:t.fixedColors},filter:this.boundaryFilters,relative:l});if(!v)return;e==="fill"?this.dataFillColors=v:this.dataLineColors=v,this.dataCalculatedValues=k,this.dataCalculatedValueLabel=`${l?"% ":""}Diff: ${i}`,this.legendStore.setLegendSection({section:e==="fill"?"FillColor":"Line Color",column:w.name,values:b,diff:!0,relative:l,normalColumn:C?C.name:""})}},paintColorsWithFilter(e,t){const i=e==="fill"?this.currentUIFillColorDefinitions:this.currentUILineColorDefinitions,s=i.columnName,a=i.join==="@count"?t[`@@${s}`]:t[`@@${i.join}`];let o;if(i.normalize){const d=i.normalize.split(":");this.dataCalculatedValueLabel=s+"/"+d[1];const u=i.dataset;if(!this.datasets[d[0]]||!this.datasets[d[0]][d[1]])throw Error(`Dataset ${u} does not contain column "${s}"`);o=t[d[1]]}const r={numFeatures:this.boundaries.length,data:t[s],lookup:a,normalColumn:o,filter:this.boundaryFilters,options:i,join:i.join},{rgbArray:n,legend:l,calculatedValues:h}=j.getColorsForDataColumn(r);n&&(e==="fill"?this.dataFillColors=n:this.dataLineColors=n,this.dataCalculatedValues=h,this.legendStore.setLegendSection({section:e==="fill"?"FillColor":"Line Color",column:s,values:l}))},handleNewFillColor(e){var w,D,C,x,$;const t="columnName"in e,i=!t;if(t){const v=e==null?void 0:e.dataset,{filteredRows:b}=this.myDataManager.getFilteredDataset({dataset:`${v}`||""});if(b&&b.length){this.currentUIFillColorDefinitions=e,this.processFiltersNow(v);return}}if(i){this.paintColorsWithFilter("fill",e);return}const s=e;this.currentUIFillColorDefinitions=s;const a=s.columnName;if(s.diffDatasets){this.handleColorDiffMode("fill",s);return}if(!a){this.dataFillColors=s.fixedColors[0],this.dataCalculatedValueLabel="",this.legendStore.clear("FillColor");return}const o=s.dataset||"",r=this.datasets[o];if(this.dataCalculatedValueLabel="",!r){console.warn("color: no selected dataset yet, maybe still loading");return}const n=r[a];if(!n)throw Error(`Dataset ${o} does not contain column "${a}"`);this.dataCalculatedValueLabel=a??"";let l="";s.join&&s.join!=="@count"?l=s.join:s.join==="@count"?l=a:this.datasetChoices.length>1&&console.warn("No join; lets hope user just wants to display data in boundary file"),this.setupJoin({datasetId:o,dataTable:r,dataJoinColumn:l});const h=r[`@@${l}`];let d,u;if(s.normalize){const[v,b]=s.normalize.split(":");if(!this.datasets[v]||!this.datasets[v][b])throw Error(`${v} does not contain column "${b}"`);this.dataCalculatedValueLabel+=`/ ${b}`,d=this.datasets[v][b],this.datasetChoices[0]!==v&&(this.setupJoin({datasetId:v,dataTable:this.datasets[v],dataJoinColumn:l}),u=this.datasets[v][`@@${l}`])}const f={ramp:((w=s.colorRamp)==null?void 0:w.ramp)||"Viridis",style:((D=s.colorRamp)==null?void 0:D.style)||0,reverse:((C=s.colorRamp)==null?void 0:C.reverse)||!1,steps:((x=s.colorRamp)==null?void 0:x.steps)||9,breakpoints:(($=s.colorRamp)==null?void 0:$.breakpoints)||void 0},{rgbArray:c,legend:m,calculatedValues:y}=j.getColorsForDataColumn({numFeatures:this.boundaries.length,data:n,normalColumn:d,normalLookup:u,lookup:h,filter:this.boundaryFilters,options:{colorRamp:f,fixedColors:s.fixedColors},join:s.join});c&&(this.dataFillColors=c,this.dataCalculatedValues=y,this.dataNormalizedValues=y||null,this.legendStore.setLegendSection({section:"FillColor",column:n.name,values:m,normalColumn:d?d.name:""}))},handleNewLineColor(e){var o,r,n,l,h;if(e===!1){this.dataLineColors="",this.legendStore.clear("Line Color");return}const t="columnName"in e,i=!t;if(t){const d=e==null?void 0:e.dataset,{filteredRows:u}=this.myDataManager.getFilteredDataset({dataset:`${d}`||""});if(u&&u.length){this.currentUILineColorDefinitions=e,this.processFiltersNow(d);return}}if(i){this.paintColorsWithFilter("lineColor",e);return}const s=e;this.currentUILineColorDefinitions=s;const a=s.columnName;if(s.diffDatasets){this.handleColorDiffMode("lineColor",s);return}else if(a){const d=s.dataset||"",u=this.datasets[d];if(this.dataCalculatedValueLabel="",!u){console.warn("color: no selected dataset yet, maybe still loading");return}const f=u[a];if(!f)throw Error(`Dataset ${d} does not contain column "${a}"`);this.dataCalculatedValueLabel=a??"";let c="";s.join&&s.join!=="@count"?c=s.join:s.join==="@count"?c=a:this.datasetChoices.length>1&&console.warn("No join; lets hope user just wants to display data in boundary file"),this.setupJoin({datasetId:d,dataTable:u,dataJoinColumn:c});const m=u[`@@${c}`];let y,w;if(s.normalize){const[b,k]=s.normalize.split(":");if(!this.datasets[b]||!this.datasets[b][k])throw Error(`${b} does not contain column "${k}"`);this.dataCalculatedValueLabel+=`/ ${k}`,y=this.datasets[b][k],this.datasetChoices[0]!==b&&(this.setupJoin({datasetId:b,dataTable:this.datasets[b],dataJoinColumn:c}),w=this.datasets[b][`@@${c}`])}const D={ramp:((o=s.colorRamp)==null?void 0:o.ramp)||"Viridis",style:((r=s.colorRamp)==null?void 0:r.style)||0,reverse:((n=s.colorRamp)==null?void 0:n.reverse)||!1,steps:((l=s.colorRamp)==null?void 0:l.steps)||9,breakpoints:(h=s.colorRamp)==null?void 0:h.breakpoints},C=j.getColorsForDataColumn({numFeatures:this.boundaries.length,data:f,lookup:m,normalColumn:y,normalLookup:w,filter:this.boundaryFilters,options:{colorRamp:D,fixedColors:s.fixedColors},join:s.join}),{rgbArray:x,legend:$,calculatedValues:v}=C;if(!x)return;if(this.dataLineColors=x,this.dataCalculatedValues=v,this.dataNormalizedValues=v||null,C.hasCategory&&this.constantLineWidth!==null){const b=this.constantLineWidth,k=new Float32Array(this.boundaries.length).fill(1);Object.keys(C.hasCategory).forEach(L=>{k[L]=b}),this.dataLineWidths=k}this.legendStore.setLegendSection({section:"Line Color",column:f.name,values:$,normalColumn:y?y.name:""})}else{this.dataLineColors=s.fixedColors[0],this.dataCalculatedValueLabel="",this.legendStore.clear("Line Color");return}},handleNewLineWidth(e){const t=e.columnName||"";if(e.dataset&&/^@\d$/.test(e.dataset)){this.dataLineWidths=Number.parseInt(e.dataset.substring(1)),this.constantLineWidth=this.dataLineWidths,this.legendStore.clear("Line Width");return}else this.constantLineWidth=null;if(e.scaleFactor&&isNaN(e.scaleFactor)){this.dataLineWidths=1,this.legendStore.clear("Line Width");return}if(e.diffDatasets){const i=e.join||"",s=e.diffDatasets[0]||"",a=this.datasets[s],o=e.diffDatasets[1]||"",r=this.datasets[o];if(a&&r){this.setupJoin({datasetId:s,dataTable:a,dataJoinColumn:i}),this.setupJoin({datasetId:o,dataTable:r,dataJoinColumn:i});const n=a[`@@${i}`],l=r[`@@${i}`],h=a[t],d=r[t];if(!h)throw Error(`Dataset ${s} does not contain column "${t}"`);if(!d)throw Error(`Dataset ${o} does not contain column "${t}"`);const{array:u,legend:f,calculatedValues:c}=j.getWidthsForDataColumn({numFeatures:this.boundaries.length,data:h,data2:d,lookup:n,lookup2:l,options:e});this.dataLineWidths=u||0,this.dataCalculatedValues=c,this.dataCalculatedValueLabel="Diff: "+t,this.legendStore.setLegendSection({section:"Line Width",column:`${h.name} (Diff)`,values:f})}}else if(t){const i=e.dataset||"",s=this.datasets[i];if(s){const a=s[t];if(!a)throw Error(`Dataset ${i} does not contain column "${t}"`);let o="";e.join&&e.join!=="@count"?o=e.join:e.join==="@count"?o=t:this.datasetChoices.length>1&&console.warn("No join; lets hope user just wants to display data in boundary file"),this.setupJoin({datasetId:i,dataTable:s,dataJoinColumn:o});const r=s[`@@${o}`],{array:n,legend:l,calculatedValues:h}=j.getWidthsForDataColumn({numFeatures:this.boundaries.length,data:a,lookup:r,join:e.join,options:e});this.dataLineWidths=n||0,this.dataCalculatedValues=h,this.dataCalculatedValueLabel=t,l.length?this.legendStore.setLegendSection({section:"Line Width",column:a.name,values:l}):this.legendStore.clear("Line Width")}}else this.dataLineWidths=1,this.dataCalculatedValueLabel="",this.legendStore.clear("Line Width")},handleNewFillHeight(e){const t=e.columnName;if(t){const i=e.dataset||"",s=this.datasets[i];if(s){const a=s[t];if(!a)throw Error(`Dataset ${i} does not contain column "${t}"`);let o="";e.join&&e.join!=="@count"?o=e.join:e.join==="@count"?o=t:this.datasetChoices.length>1&&console.warn("No join; lets hope user just wants to display data in boundary file"),this.setupJoin({datasetId:i,dataTable:s,dataJoinColumn:o});const r=s[`@@${o}`];let n;if(e.normalize){const u=e.normalize.split(":");if(!this.datasets[u[0]]||!this.datasets[u[0]][u[1]])throw Error(`Dataset ${i} does not contain column "${t}"`);n=this.datasets[u[0]][u[1]],this.dataCalculatedValueLabel=t+"/"+u[1]}const{heights:l,calculatedValues:h,normalizedValues:d}=j.getHeightsBasedOnNumericValues({length:this.boundaries.length,data:a,lookup:r,options:e,normalize:n,join:e.join});if(this.dataFillHeights=l,this.dataCalculatedValues=h,this.dataNormalizedValues=d||null,this.$store.state.viewState.pitch==0){const u=Object.assign({},this.$store.state.viewState,{pitch:30});this.$store.commit("setMapCamera",u)}}}else this.dataFillHeights=0,this.dataCalculatedValues=null,this.dataCalculatedValueLabel=""},handleNewRadius(e){const t=e.columnName;if(t){const i=e.dataset||"",s=this.datasets[i];if(!s){console.warn("radius: no selected dataset yet, maybe still loading");return}if(s){const a=s[t];if(!a)throw Error(`Dataset ${i} does not contain column "${t}"`);let o="";e.join&&e.join!=="@count"?o=e.join:e.join==="@count"?o=t:this.datasetChoices.length>1&&console.warn("No join; lets hope user just wants to display data in boundary file"),this.setupJoin({datasetId:i,dataTable:s,dataJoinColumn:o});const r=s[`@@${o}`],{radius:n,calculatedValues:l}=j.getRadiusForDataColumn({length:this.boundaries.length,data:a,lookup:r,join:o,options:e});this.dataPointRadii=n,this.dataCalculatedValues=l,this.dataCalculatedValueLabel=a.name}}else this.dataPointRadii=5;F[1e3+this.layerId]&&F[1e3+this.layerId](typeof this.dataPointRadii=="number"?this.boundaries:this.centroids)},async handleMapClick(e){try{const{x:t,y:i,data:s}=e.points[0],a=this.config.groupBy,o=t}catch(t){console.error(t)}},async figureOutFeatureIdColumn(){if(this.featureJoinColumn)return this.featureJoinColumn;if(typeof this.vizDetails.shapes!="string"&&this.vizDetails.shapes.join)return this.isAvroFile&&this.vizDetails.shapes.join==="id"?"linkId":this.vizDetails.shapes.join;if(this.boundaries.length&&this.boundaries[0].id)return"id";if(typeof this.vizDetails.shapes!="string"&&this.vizDetails.shapes.join)return this.vizDetails.shapes.join;const e=this.datasets[Object.keys(this.datasets)[0]],t=Object.keys(e);if(t.length===1)return t[0];const i=await new Promise((s,a)=>{const o=new Set;this.boundaries[0].id&&o.add("id"),Object.keys(e).forEach(r=>o.add(r)),this.datasetJoinSelector={data1:{title:"Properties",columns:Array.from(o)}},this.showJoiner=!0,this.cbDatasetJoined=r=>{this.datasetJoinSelector={},this.showJoiner=!1,s(r)}});return i.length?i:"id"},async processFiltersNow(e){var s,a;console.log("> processFiltersNow",e);const{filteredRows:t}=this.myDataManager.getFilteredDataset({dataset:e||""}),i={};if(t){(t.length>0?Object.keys(t[0]):[]).forEach(l=>{const h={name:l,values:[],type:I.UNKNOWN};for(const d of t)h.values.push(d[l]);i[l]=h});const r=this.getBoundaryOffsetLookup(this.featureJoinColumn),n=new Float32Array(this.boundaryFilters.length);n.fill(1);for(const l of t){const h=l[this.featureJoinColumn],d=r[h];n[d]=0}for(let l=0;l<this.boundaryFilters.length;l++)n[l]&&(this.boundaryFilters[l]=-1)}try{(s=this.currentUIFillColorDefinitions)!=null&&s.dataset&&this.handleNewFillColor(t?i:this.currentUIFillColorDefinitions),(a=this.currentUILineColorDefinitions)!=null&&a.dataset&&this.handleNewLineColor(t?i:this.currentUILineColorDefinitions)}catch(o){this.$emit("error",""+o)}},async loadAvroNetwork(e){const t=`${this.subfolder}/${e}`,i=await this.fileApi.getFileBlob(t),a=(await new Promise((h,d)=>{const u=[];ot.createBlobDecoder(i).on("metadata",f=>{}).on("data",f=>{u.push(f)}).on("end",()=>{h(u)})}))[0],o=a.linkId.length,r=[],n=a.crs||"EPSG:4326",l=n!=="EPSG:4326"&&n!=="WGS84";for(let h=0;h<o;h++){const d=a.linkId[h],u=2*a.from[h],f=2*a.to[h];let c=[a.nodeCoordinates[u],a.nodeCoordinates[1+u]],m=[a.nodeCoordinates[f],a.nodeCoordinates[1+f]];if(!c||!m)continue;l&&(c=O.toLngLat(n,c),m=O.toLngLat(n,m));const w={id:d,type:"Feature",properties:{},geometry:{type:"LineString",coordinates:[c,m]}};r.push(w)}return this.avroNetwork=a,this.isAvroFile=!0,r},async loadXMLNetwork(e){if(!this.myDataManager)throw Error("links: no datamanager");this.statusText="Loading XML network...";try{const t=await this.myDataManager.getRoadNetwork(e,this.subfolder,this.vizDetails,a=>{this.statusText=a}),i=t.source.length/2,s=[];for(let a=0;a<i;a++){const o=a*2,r={type:"Feature",id:t.linkIds[a],properties:{},geometry:{type:"LineString",coordinates:[[t.source[o],t.source[o+1]],[t.dest[o],t.dest[o+1]]]}};s.push(r)}return s}catch(t){console.error(""+t)}},async loadBoundaries(){const e=this.config.boundaries||this.config.shapes||this.config.geojson||this.config.network;if(!e)return;let t=e.file||e,i=[],s;try{this.statusText="Loading features...",t.startsWith("http")?s=(await fetch(t).then(async n=>await n.json())).features:t.toLocaleLowerCase().endsWith(".shp")?s=await this.loadShapefileFeatures(t):t.toLocaleLowerCase().indexOf(".xml")>-1?(s=await this.loadXMLNetwork(t),console.log(777,{boundaries:s})):t.toLocaleLowerCase().includes("network.avro")?s=await this.loadAvroNetwork(t):s=(await this.fileApi.getFileJson(`${this.subfolder}/${t}`)).features,this.statusText="Processing data...",await this.$nextTick();let a=!0,o=!0,r=!1;s.forEach(n=>{const l=n.properties??{};"id"in n&&(l.id=n.id),i.push({...l}),n.properties={},(n.geometry.type=="Point"||n.geometry.type=="MultiPoint")&&(r=!0),a&&(n.geometry.type=="LineString"||n.geometry.type=="MultiLineString")&&(a=!1),o&&(n.geometry.type=="Polygon"||n.geometry.type=="MultiPolygon")&&(o=!1)}),this.moveLogo(),await this.setFeaturePropertiesAsDataSource(t,[...i],e),(!a||s.length<5e3)&&(this.dataLineColors="#4e79a7"),o&&(this.isAreaMode=!1),r&&(this.isAreaMode=!0),this.boundaries=s,!o||r?await this.generateCentroidsAndMapCenter():this.needsInitialMapExtent&&this.calculateAndMoveToCenter(),await this.$nextTick(),F[1e3+this.layerId]&&F[1e3+this.layerId](this.boundaries)}catch(a){const n=`${a.statusText||"Could not load"}: "${t}"`;throw this.statusText="",this.$emit("isLoaded"),Error(n)}if(!this.boundaries)throw Error('No "features" found in shapes file')},async setFeaturePropertiesAsDataSource(e,t,i){let s;if(this.avroNetwork){const o={},r=this.avroNetwork.linkAttributes;r.sort();for(const h of r){const d=this.avroNetwork[h],u=Number.isFinite(d[0])||Number.isNaN(d[0])?I.NUMBER:I.STRING,f={name:h,values:d,type:u};o[h]=f}const n=this.avroNetwork.modes,l=o.allowedModes;l.type=I.STRING,l.values=l.values.map(h=>n[h]),s=await this.myDataManager.setRowWisePropertyTable(e,o,i),this.avroNetwork=null}else s=await this.myDataManager.setFeatureProperties(e,t,i);this.boundaryDataTable=s;const a=e.substring(1+e.lastIndexOf("/"));this.datasets[a]=s,this.vizDetails.datasets[a]={file:a,join:this.datasetJoinColumn},this.config.datasets=Object.assign({},this.vizDetails.datasets)},async calculateAndMoveToCenter(){var a;let e=0,t=0,i=0;const s=this.boundaries.length;for(let o=0;o<s;o+=256){const r=W(this.boundaries[o]);(a=r==null?void 0:r.geometry)!=null&&a.coordinates&&(e+=r.geometry.coordinates[0],t+=r.geometry.coordinates[1],i+=1)}e/=i,t/=i,console.log("CENTER",e,t),this.needsInitialMapExtent&&!this.vizDetails.center&&(this.$store.commit("setMapCamera",{longitude:e,latitude:t,center:[e,t],bearing:0,pitch:0,zoom:9,initial:!0}),this.needsInitialMapExtent=!1)},async generateCentroidsAndMapCenter(){this.statusText="Calculating centroids...",await this.$nextTick();const e=this.config.shapes.join||"id";let t=0,i=0,s=0;for(const a of this.boundaries){let o={};try{o=W(a)}catch{console.warn("no coordinates:"),console.warn(a);continue}o.properties||(o.properties={}),a.properties[this.config.boundariesLabel]&&(o.properties.label=a.properties[this.config.boundariesLabel]),o.properties.id=a.properties[e],o.properties.id===void 0&&(o.properties.id=a[e]),this.centroids.push(o),o.geometry&&(t+=o.geometry.coordinates[0],i+=o.geometry.coordinates[1],s++)}t/=s,i/=s,console.log("CENTER",t,i),this.needsInitialMapExtent&&!this.vizDetails.center&&(this.$store.commit("setMapCamera",{longitude:t,latitude:i,center:[t,i],bearing:0,pitch:0,zoom:9,initial:!0}),this.needsInitialMapExtent=!1)},async loadShapefileFeatures(e){var u,f;this.statusText="Loading shapefile...",console.log("loading",e);const t=`${this.subfolder}/${e}`;let i,s,a,o={};try{i=await this.fileApi.getFileBlob(t)}catch{return this.$emit("error","Error loading "+t),[]}try{const c=t.replace(".shp",".dbf").replace(".SHP",".DBF").replace(".Shp",".Dbf");s=await this.fileApi.getFileBlob(c),a=await((u=await s)==null?void 0:u.arrayBuffer())}catch{}try{const c=await((f=await i)==null?void 0:f.arrayBuffer());if(!c)return[];this.statusText="Generating shapes...",o=await st(c,a),o.features=o.features.filter(m=>!!m.geometry),this.statusText=""}catch(c){return console.error(c),this.$emit("error",`Error loading shapefile ${t}`),[]}let r=tt;const n=t.replace(".shp",".prj").replace(".SHP",".PRJ").replace(".Shp",".Prj");try{r=await this.fileApi.getFileText(n)}catch(c){console.error(""+c)}const l=this.vizDetails.projection||O.guessProjection(r);console.log({guessCRS:l}),l&&(this.statusText="Projecting coordinates...",await this.$nextTick(),o=dt.toWgs84(o,l,O.allEPSGs),this.statusText="");function h(c){return Array.isArray(c[0])?h(c[0]):[c[0],c[1]]}const d=h(o.features[0].geometry.coordinates);if(Math.abs(d[0])>180||Math.abs(d[1])>90){const c=`Coordinates not lon/lat. Try adding projection to YAML, or provide ${n.substring(1+n.lastIndexOf("/"))}`;return this.$emit("error",c),this.statusText="",[]}{const c=[],m=[];for(let D=0;D<o.features.length;D+=128){const C=h(o.features[D].geometry.coordinates);c.push(C[0]),m.push(C[1])}const y=c.reduce((D,C)=>D+C)/c.length,w=m.reduce((D,C)=>D+C)/m.length;this.$store.commit("setMapCamera",{longitude:y,latitude:w,bearing:0,pitch:0,zoom:9,center:[y,w],initial:!0})}return this.needsInitialMapExtent=!1,o.features},async loadDatasets(){const e=Object.keys(this.vizDetails.datasets);for(const t of e)t in this.datasets||await this.loadDataset(t)},async loadDataset(e){try{if(!e)return;const t=typeof this.config.datasets[e]=="string"?this.config.datasets[e]:this.config.datasets[e].file;this.statusText=`Loading dataset ${t} ...`,await this.$nextTick();let i={dataset:t};typeof this.config.datasets[e]!="string"&&(i=Object.assign(i,this.config.datasets[e])),this.datasetKeyToFilename[e]=t;const s=await this.myDataManager.getDataset(i),a=typeof this.config.datasets[e]=="string"?Object.keys(s.allRows)[0]:this.config.datasets[e].join,o=(a==null?void 0:a.split(":"))||[];o.length==2&&(this.featureJoinColumn=o[0]),o.length==1&&o.push(o[0]),this.datasets[e]=s.allRows,await this.$nextTick(),this.myDataManager.addFilterListener({dataset:t},this.processFiltersNow),this.activateFiltersForDataset(e)}catch(t){const i=""+t;console.error(i),this.$emit("error",i)}return[]},async activateFiltersForDataset(e){const t=this.filterDefinitions.filter(i=>i.dataset===e);for(const i of t)if(i.value=="@categorical")this.filters[i.column]?i.value=this.filters[i.column].active:this.handleUserCreatedNewFilter(`${e}:${i.column}`);else try{await this.myDataManager.setFilter(Object.assign(i,{dataset:this.datasetKeyToFilename[e]}))}catch(s){this.$emit("error",`Filter ${e}.${i.column}: `+s)}},filterLabel(e){let t=this.filters[e].active.join(",").substring(0,50)||"Select...";return t.length===50&&(t+="..."),t},async handleUserSelectedNewMetric(){await this.$nextTick(),console.log("METRIC",this.datasetValuesColumn);const e=Object.assign({},this.$route.query);e.display=this.datasetValuesColumn,this.$router.replace({query:e}),this.maxValue=this.boundaryDataTable[this.datasetValuesColumn].max||0,this.vizDetails.display.fill.columnName=this.datasetValuesColumn,this.vizDetails=Object.assign({},this.vizDetails),this.processFiltersNow()},handleUserSelectedNewFilters(e){const t=this.filters[e],i=t.active;this.myDataManager.setFilter({dataset:this.datasetKeyToFilename[t.dataset],column:e,invert:!1,value:i});const s=Object.assign({},this.$route.query);for(const a of Object.entries(this.filters))a[1].active.length?s[a[0]]=a[1].active.join(","):delete s[a[0]];JSON.stringify(this.$route.query)!==JSON.stringify(s)&&this.$router.replace({query:s})},showCircles(e){this.useCircles=e;const t=Object.assign({},this.$route.query);e?t.show="dots":delete t.show,this.$router.replace({query:t})},handleUserCreatedNewFilter(e){const t=e||this.chosenNewFilterColumn,[i,s]=t.split(":");let a=[...new Set(this.datasets[i][s].values)];if(this.chosenNewFilterColumn="",a.length>48){alert(`Column ${s} has too many values to be used as a filter.`);return}this.filters[s]={column:s,label:s,options:a,active:[],dataset:i}},updateChart(){var l;if(!this.config.display||!this.config.datasets)return;let e="linkId";(l=this.config.shapes)!=null&&l.join&&(e=this.config.shapes.join);const t=this.datasetJoinColumn;if(!t){console.error(`No join column ${t}`);return}let i=this.config.display.fill.values;if(!i)throw this.statusText="",Error("Need to specify column for data values");this.$route.query.display&&(this.config.display.fill.columnName=this.$route.query.display);let s=this.config.display.fill.columnName||i[0];this.datasetValuesColumn=s;const a=this.boundaryDataTable[t].values,o=this.boundaryDataTable[s].values,r=kt(xt(a,o),h=>h[0]);let n=0;for(let h=0;h<this.boundaries.length;h++){const d=this.boundaries[h],u=this.centroids[h];let f=d[e];f==null&&(f=d.properties[e]),f===void 0&&this.$emit("error",`Shape is missing property "${e}"`);const c=r.get(f);c?(d.properties.value=$t(c.map(m=>m[1])),n=Math.max(n,d.properties.value)):d.properties.value="N/A",u&&(u.properties.value=d.properties.value)}this.maxValue=this.boundaryDataTable[s].max||0,this.centroids=this.centroids.sort((h,d)=>h.properties.value>d.properties.value?-1:1),this.activeColumn="value"},clearData(){this.boundaries=[],this.centroids=[],this.boundaryDataTable={},this.boundaryFilters=new Float32Array(0),this.datasets={},this.dataFillColors="#888",this.dataLineColors="",this.dataLineWidths=1,this.dataPointRadii=5,this.dataFillHeights=0,this.dataCalculatedValues=null,this.dataCalculatedValueLabel="",this.bgLayers={}},updateBgLayers(){this.bgLayers={...this.bgLayers}},async loadBackgroundLayers(){if(this.bgLayers={},!this.vizDetails.backgroundLayers){this.vizDetails.backgroundLayers={};return}for(const e of Object.keys(this.vizDetails.backgroundLayers))try{console.log("LOADING",e);const t=this.vizDetails.backgroundLayers[e];if(!t.shapes)continue;let i=[];try{const d=t.shapes;d.startsWith("http")?i=(await fetch(d).then(async u=>await u.json())).features:d.toLocaleLowerCase().endsWith(".shp")?i=await this.loadShapefileFeatures(d):i=(await this.fileApi.getFileJson(`${this.subfolder}/${d}`)).features}catch(d){console.error(""+d)}let s=null;if(t.fill&&!t.fill.startsWith("#")){const d=t.fill.startsWith("scheme")?t.fill:`interpolate${t.fill}`,u=ct[d];if(u){const f=St(u);s=Array.from({length:i.length},(c,m)=>{const y=J(f(m/i.length-1));return[y.r,y.g,y.b]})}}for(let d=0;d<i.length;d++){const u=i[d];let f=[64,64,192];t.fill&&(t.fill.startsWith("#")?f=U([t.fill])[0]:s&&(f=s[d])),u.properties.__fill__=f}if(t.label){const d=[];for(const u of i){const f=W(u);f.properties||(f.properties={}),f.properties.label=u.properties[t.label],d.push(f)}i=i.concat(d)}const a=t.borderColor?U([t.borderColor])[0]:[255,255,255],o="borderWidth"in t?parseInt(t.borderWidth):0,r=t.opacity||.25;let n=!0;"visible"in t&&(n=t.visible);let l=!1;"onTop"in t&&(l=!!t.onTop),console.log("FINAL FEATURES",i);const h={features:i,opacity:r,borderWidth:o,borderColor:a,visible:n,onTop:l};this.bgLayers[e]=h}catch(t){console.error(""+t)}this.redraw+=1}},async mounted(){var e,t,i,s;try{if(this.setEmbeddedMode(),this.clearData(),await this.getVizDetails(),this.vizDetails.center&&typeof this.vizDetails.center=="string"&&(this.vizDetails.center=this.vizDetails.center.split(",").map(a=>parseFloat(a)),this.config.center=this.config.center.split(",").map(a=>parseFloat(a))),this.buildThumbnail(),this.thumbnail)return;this.buildOldJoinLookups(),this.filterDefinitions=this.parseFilterDefinitions(this.vizDetails.filters),this.setupLogoMover(),this.needsInitialMapExtent&&this.vizDetails.center&&(this.$store.commit("setMapCamera",{center:this.vizDetails.center,zoom:this.vizDetails.zoom||9,bearing:this.vizDetails.bearing||0,pitch:this.vizDetails.pitch||0,longitude:this.vizDetails.center?this.vizDetails.center[0]:0,latitude:this.vizDetails.center?this.vizDetails.center[1]:0,initial:!0}),this.needsInitialMapExtent=!1),this.expColors=(t=(e=this.config.display)==null?void 0:e.fill)==null?void 0:t.exponentColors,this.dataFillColors=z.state.isDarkMode?"#44445580":"#dddddd80",this.config.display.fill||(this.config.display.fill={}),(s=(i=this.config.display)==null?void 0:i.fill)!=null&&s.values&&(this.config.display.fill.values=this.convertCommasToArray(this.config.display.fill.values)),await this.loadBoundaries(),this.filterShapesNow(),this.isLoaded=!0,this.$emit("isLoaded"),await this.loadDatasets(),this.datasets=Object.assign({},this.datasets),this.config.datasets=JSON.parse(JSON.stringify(this.datasets)),this.vizDetails=Object.assign({},this.vizDetails),this.honorQueryParameters(),this.statusText="",this.featureJoinColumn=await this.figureOutFeatureIdColumn(),this.loadBackgroundLayers()}catch(a){this.$emit("error",""+a),this.statusText="",this.$emit("isLoaded")}},beforeDestroy(){var e;delete F[this.layerId],F[1e3+this.layerId]&&(F[1e3+this.layerId]([]),delete F[1e3+this.layerId]),this.clearData(),this.legendStore.clear(),(e=this.resizer)==null||e.disconnect(),this.myDataManager.removeFilterListener(this.config,this.processFiltersNow),this.$store.commit("setFullScreen",!1)}});var Gt=function(){var s,a;var t=this,i=t._self._c;return t._self._setupProxy,i("div",{staticClass:"shapefile-viewer",class:{"hide-thumbnail":!t.thumbnail},style:{background:t.urlThumbnail},attrs:{oncontextmenu:"return false"}},[t.showJoiner?i("modal-id-column-picker",t._b({on:{join:t.cbDatasetJoined}},"modal-id-column-picker",t.datasetJoinSelector,!1)):t._e(),i("div",{staticClass:"main-layout",on:{mousemove:function(o){return o.stopPropagation(),t.dividerDragging.apply(null,arguments)}}},[i("div",{directives:[{name:"show",rawName:"v-show",value:t.showLegend,expression:"showLegend"}],staticClass:"dragger",on:{mousedown:t.dividerDragStart,mouseup:t.dividerDragEnd,mousemove:function(o){return o.stopPropagation(),t.dividerDragging.apply(null,arguments)}}}),i("div",{directives:[{name:"show",rawName:"v-show",value:t.showLegend,expression:"showLegend"}],staticClass:"new-rightside-info-panel",style:{width:`${t.legendSectionWidth}px`}},[i("div",{staticClass:"legend-panel"},[(a=(s=t.legendStore.state)==null?void 0:s.sections)!=null&&a.length?t._e():i("p",{staticStyle:{"font-size":"1.1rem"}},[i("b",[t._v("INFO PANEL")])]),i("legend-box",{attrs:{legendStore:t.legendStore}})],1),t.tooltipHtml&&!t.statusText?i("div",{staticClass:"tooltip-html",domProps:{innerHTML:t._s(t.tooltipHtml)}},[i("div",{staticClass:"bglayer-section"},t._l(Object.keys(t.bgLayers),function(o){return i("b-checkbox",{key:o,staticClass:"simple-checkbox",on:{input:t.updateBgLayers},model:{value:t.bgLayers[o].visible,callback:function(r){t.$set(t.bgLayers[o],"visible",r)},expression:"bgLayers[layer].visible"}},[t._v(t._s(o))])}),1)]):t._e()]),t.thumbnail?t._e():i("div",{staticClass:"area-map",attrs:{id:`container-${t.layerId}`}},[i("div",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false && statusText"}],staticClass:"status-bar"},[t._v(t._s(t.statusText))]),t.needsInitialMapExtent?t._e():i("geojson-layer",{staticClass:"map-layers",attrs:{viewId:t.layerId,fillColors:t.dataFillColors,lineColors:t.dataLineColors,lineWidths:t.dataLineWidths,fillHeights:t.dataFillHeights,screenshot:t.triggerScreenshot,featureFilter:t.boundaryFilters,opacity:t.sliderOpacity,pointRadii:t.dataPointRadii,cbTooltip:t.cbTooltip,bgLayers:t.bgLayers,handleClickEvent:t.handleClickEvent,highlightedLinkIndex:t.highlightedLinkIndex,redraw:t.redraw}}),t.isLoaded?i("viz-configurator",{attrs:{embedded:t.isEmbedded,sections:t.configuratorSections,fileSystem:t.fileSystem,subfolder:t.subfolder,yamlConfig:t.generatedExportFilename,vizDetails:t.vizDetails,datasets:t.datasets,legendStore:t.legendStore,filterDefinitions:t.currentUIFilterDefinitions},on:{update:t.changeConfiguration,screenshot:t.takeScreenshot,toggleLegend:function(o){t.showLegend=!t.showLegend}}}):t._e(),i("div",{staticClass:"details-panel"}),t.isLoaded&&!t.thumbnail?i("zoom-buttons"):t._e(),!t.thumbnail&&!t.isEmbedded&&t.isLoaded&&Object.keys(t.filters).length?i("div",{staticClass:"config-bar",class:{"is-standalone":!t.configFromDashboard,"is-disabled":!t.isLoaded}}):t._e(),t._l(Object.keys(t.filters),function(o){return i("div",{staticClass:"filter"},[i("p",[t._v(t._s(o))]),i("b-dropdown",{attrs:{scrollable:t.filters[o].active.length>10,"max-height":"250",multiple:"","aria-role":"list","mobile-modal":!1,"close-on-click":!0},on:{change:function(r){return t.handleUserSelectedNewFilters(o)}},scopedSlots:t._u([{key:"trigger",fn:function({active:r}){return[i("b-button",{staticClass:"is-primary",attrs:{type:t.filters[o].active.length?"":"is-outlined",label:t.filterLabel(o)}})]}}],null,!0),model:{value:t.filters[o].active,callback:function(r){t.$set(t.filters[o],"active",r)},expression:"filters[filter].active"}},t._l(t.filters[o].options,function(r){return i("b-dropdown-item",{key:r,attrs:{value:r,"aria-role":"listitem"}},[t._v(t._s(r))])}),1)],1)})],2)])],1)},Kt=[];var Xt=et(qt,Gt,Kt,!1,null,"2cd1a6f4",null,null);const Ae=Xt.exports;export{Ae as default};
//# sourceMappingURL=ShapeFile-5db0d66e.js.map
