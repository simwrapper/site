import{d as _,g as d,U as b,B as D,u as w,n as z}from"./index-24c2379b.js";import{y as C}from"./index-719eff74.js";import{V as j}from"./VuePlotly-0e863d69.js";import{H as E}from"./HTTPFileSystem-017e7593.js";import{D as F}from"./DashboardDataManager-9bea9fc4.js";import{g as S}from"./ColorsAndWidths-1801eb2f.js";import{m as k}from"./util-8430d78c.js";import"./RoadNetworkLoader.worker-ba4f3b4d.js";import"./Coords-23d23a7c.js";import"./group-f6e6d4c5.js";import"./index-f6506551.js";import"./cubehelix-25f71112.js";import"./rainbow-3c4177eb.js";import"./threshold-576e5497.js";import"./fxp-b80b6d05.js";const I={messages:{en:{total:"total",showChanges:"Only show changes"},de:{total:"Insgesamt",showChanges:"Nur Ã„nderungen zeigen"}}},M=_({name:"PlotlyPlugin",components:{VuePlotly:j},i18n:I,props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},config:{type:Object},datamanager:{type:Object},resize:Object,thumbnail:Boolean,yamlConfig:String},data(){return{globalState:d.state,vizDetails:{title:"",description:""},loadingText:"",jsonChart:{},id:`plotly-id-${Math.floor(1e12*Math.random())}`,traces:[],prevWidth:-1,prevHeight:-1,attributeColorMap:new Map,colorway:["#1f77b4","#ff7f0e","#2ca02c","#d62728","#9467bd","#8c564b","#e377c2","#7f7f7f","#bcbd22","#17becf"],myDataManager:this.datamanager||new F(this.root,this.subfolder),layout:{margin:{t:8,b:0,l:50,r:0,pad:2},font:{color:"#444444",family:b},xaxis:{automargin:!0,autorange:!0,range:[0,100],title:{text:"",standoff:12},animate:!0},yaxis:{automargin:!0,autorange:!0,range:[0,100],title:{text:"",standoff:16},animate:!0,rangemode:"tozero"},yaxis2:{automargin:!0,autorange:!0,range:[0,100],title:{text:"",standoff:16},animate:!0,rangemode:"tozero",matches:"y",anchor:"x2"},legend:{orientation:"v",x:1,y:1},grid:{rows:1,columns:1}},options:{displaylogo:!1,responsive:!0,modeBarButtonsToRemove:["pan2d","zoom2d","select2d","lasso2d","zoomIn2d","zoomOut2d","autoScale2d","hoverClosestCartesian","hoverCompareCartesian","resetScale2d","toggleSpikelines","resetViewMapbox"],toImageButtonOptions:{format:"png",filename:"chart",width:null,height:null}},minXValue:Number.POSITIVE_INFINITY,minYValue:Number.POSITIVE_INFINITY,maxXValue:Number.NEGATIVE_INFINITY,maxYValue:Number.NEGATIVE_INFINITY,isUsingFacets:!1}},computed:{fileApi(){return new E(this.fileSystem,d)},fileSystem(){const t=this.$store.state.svnProjects.filter(e=>e.slug===this.root);if(t.length===0)throw console.log("no such project"),Error;return t[0]}},watch:{"globalState.resizeEvents"(){this.changeDimensions({})},resize(t){this.changeDimensions(t)},"globalState.isDarkMode"(){this.updateTheme()}},async mounted(){if(this.updateTheme(),await this.getVizDetails(),!this.thumbnail){try{this.vizDetails.datasets&&await this.prepareData(),this.vizDetails.traces&&(this.traces=this.vizDetails.traces),this.vizDetails.layout&&this.mergeLayouts(),this.vizDetails.fixedRatio&&(this.vizDetails.layout.xaxis=Object.assign(this.vizDetails.layout.xaxis,{constrain:"domain"}),this.vizDetails.layout.yaxis=Object.assign(this.vizDetails.layout.yaxis,{constrain:"domain",scaleanchor:"x",scaleration:1})),this.vizDetails.dropdownMenu&&(this.vizDetails.interactive="dropdown"),this.vizDetails.interactive&&this.createMenus(this.vizDetails.interactive),this.vizDetails.interactive&&this.config.interactive==="slider"&&this.setFixedAxis()}catch(t){const e=t;console.error({e}),this.$emit("error",""+e),this.loadingText=""+e}this.updateTheme(),window.addEventListener("resize",this.changeDimensions),this.layout.margin={r:0,t:8,b:0,l:50,pad:2},this.createFacets(),Array.isArray(this.traces[0].x[0])&&(this.layout.xaxis.autotickangles=[0,90])}},beforeDestroy(){window.removeEventListener("resize",this.changeDimensions)},methods:{setFixedAxis(){for(let t=0;t<this.traces.length;t++){const e=Math.min(...this.traces[t].y),s=Math.max(...this.traces[t].y),i=Math.min(...this.traces[t].x),n=Math.max(...this.traces[t].x);n>=this.maxXValue&&(this.maxXValue=n),s>=this.maxYValue&&(this.maxYValue=s),e<=this.minYValue&&(this.minYValue=e),i<=this.minXValue&&(this.minXValue=i)}this.layout.xaxis.range=[this.minXValue,this.maxXValue],this.layout.yaxis.range=[this.minYValue,this.maxYValue],this.layout.xaxis.autorange=!1,this.layout.yaxis.autorange=!1},changeDimensions(t){t!=null&&t.height&&(t!=null&&t.width)&&(t.height!==this.prevHeight||t.width!==this.prevWidth)&&(this.prevHeight=t.height,this.prevWidth=t.width,this.layout=Object.assign({},this.layout,t))},mergeLayouts(){const t={...this.vizDetails.layout};t.margin=this.layout.margin,t.font=this.layout.font,t.legend=this.layout.legend,delete t.height,delete t.width,t.xaxis?(t.xaxis.automargin=!0,t.xaxis.autorange=!0,t.xaxis.animate=!0,t.xaxis.title||(t.xaxis.title=this.layout.xaxis.title)):t.xaxis=this.layout.xaxis,t.yaxis?(t.yaxis.automargin=!0,t.yaxis.autorange=!0,t.yaxis.animate=!0,this.traces.find(e=>(e==null?void 0:e.type)=="scatter")||t.yaxis.rangemode||(t.yaxis.rangemode="tozero"),t.yaxis.title||(t.yaxis.title=this.layout.yaxis.title)):t.yaxis=this.layout.yaxis,t.yaxis2?(t.yaxis2.automargin=!0,t.yaxis2.autorange=!0,t.yaxis2.animate=!0,t.yaxis2.rangemode||(t.yaxis2.rangemode="tozero"),t.yaxis2.title||(t.yaxis2.title=this.layout.yaxis2.title)):t.yaxis2=this.layout.yaxis2,this.layout=t},createFacets(){if(this.traces[0].facet_col==null&&this.traces[0].facet_row==null)return;this.isUsingFacets=!0,this.updateTheme();let t=[],e=[];this.traces[0].facet_col!=null&&(t=this.traces[0].facet_col.filter((s,i)=>this.traces[0].facet_col.indexOf(s)===i)),this.traces[0].facet_row!=null&&(e=this.traces[0].facet_row.filter((s,i)=>this.traces[0].facet_row.indexOf(s)===i)),this.groupTracesByFacets(t,e),this.vizDetails.interactive=="dropdown"&&(this.layout.grid={rows:1,columns:1},this.createMenus(this.vizDetails.interactive))},groupTracesByFacets(t,e){const s=this.layout.yaxis.title,i=this.layout.xaxis.title,n=[];let o=e.length,a=t.length;o==0&&(o=1),a==0&&(a=1),t.length==0?n.push(...this.groupTracesByFacetsForOneColumnOrRow(o,s,e,"y","facet_row")):e.length==0?n.push(...this.groupTracesByFacetsForOneColumnOrRow(a,i,t,"x","facet_col")):n.push(...this.groupTracesByFacetsColumnsAndRows(a,o,t,e,i,s)),this.layout.margin={t:10,b:20,l:60,r:60,pad:2},this.layout.grid={rows:o,columns:a},this.traces=n},assignColor(t){if(this.attributeColorMap.has(t.legendgroup))return this.attributeColorMap.get(t.legendgroup);{const e=this.attributeColorMap.size%this.colorway.length,s=this.colorway[e];return this.attributeColorMap.set(t.legendgroup,s),s}},groupTracesByFacetsColumnsAndRows(t,e,s,i,n,o){const a=[];for(let r=0;r<e;r++)for(let c=0;c<t;c++){const f=i[r],l=s[c],h=[];for(const y of this.traces){const m=[],x=[];for(let v=0;v<y.facet_row.length;v++)y.facet_row[v]===f&&y.facet_col[v]===l&&(m.push(y.x[v]),x.push(y.y[v]));const p={...y,x:m,y:x,xaxis:r>0?"x"+(r+1):"x",yaxis:c>0?"y"+(c+1):"y"};delete p.facet_row,delete p.facet_col,p.showlegend=r===0&&c===0,p.legendgroup=p.group_name,delete p.group_name;const O=this.assignColor(p);p.marker={color:O},h.push(p)}let g=r===0?"xaxis":"xaxis"+(r+1),u=c===0?"yaxis":"yaxis"+(c+1);this.layout[u]==null?this.layout[u]={title:{text:o+"<br>"+this.config.traces[0].facet_row.split(".")[1]+" = "+i[r]},anchor:"y",autorange:!0}:(this.layout[u].title="",this.layout[u].title={text:o+"<br>"+this.config.traces[0].facet_row.split(".")[1]+" = "+i[r]},this.layout[u].anchor="y"),this.layout[g]==null?this.layout[g]={title:{text:n+"<br>"+this.config.traces[0].facet_col.split(".")[1]+" = "+s[c]},anchor:"x",autorange:!0}:(this.layout[g].title="",this.layout[g].title={text:n+"<br>"+this.config.traces[0].facet_col.split(".")[1]+" = "+s[c]},this.layout[g].anchor="x"),a.push(...h)}return a},groupTracesByFacetsForOneColumnOrRow(t,e,s,i,n){e instanceof Object&&"text"in e&&(e=e.text);const o=[];for(let a=0;a<t;a++){const r=s[a],c=[];for(const h of this.traces){const g=[];for(let m=0;m<h[n].length;m++)h[n][m]===r&&g.push(h[i=="x"?"y":"x"][m]);let u={...h};this.vizDetails.interactive=="dropdown"&&this.isUsingFacets?u={...h,x:i=="y"?g:h.x,y:i=="x"?g:h.y,xaxis:i=="y",yaxis:i=="y"}:u={...h,x:i=="y"?g:h.x,y:i=="x"?g:h.y,xaxis:i=="y"?"x":a>0?"x"+(a+1):"x",yaxis:i=="y"&&a>0?"y"+(a+1):"y"},delete u.facet_row,delete u.facet_col,this.vizDetails.interactive=="dropdown"&&this.isUsingFacets?u.showlegend=!0:u.showlegend=a===0,u.legendgroup=u.group_name,delete u.group_name,u.facet_name=r;const y=this.assignColor(u);u.marker={color:y},c.push(u)}let f=this.config.traces[0][n].split(".")[1]+" = "+s[a];if(t*f.length>150&&i=="x"){const h=f.indexOf(" = ");f=f.substring(0,h)+"<br>"+f.substring(h)}const l=a===0?i+"axis":i+"axis"+(a+1);this.layout[l]==null?this.layout[l]={title:{text:e+(e?"<br>":"")+f}}:this.vizDetails.interactive||(this.layout[l].title="",this.layout[l].title={text:e+(e?"<br>":"")+f},this.layout[l].anchor="y"),o.push(...c)}return o},createMenus(t){if(t=="none")return;const e=[],s={},i=Object.values(this.traces).length;let n="group_name";this.vizDetails.interactive=="dropdown"&&this.isUsingFacets&&(n="facet_name"),Object.values(this.traces).forEach((r,c)=>{"original_name"in r&&(r.name=r.original_name),r[n]in s||(s[r[n]]=[]),s[r[n]].push(c),r.visible=!1}),Object.entries(s).forEach(r=>{const[c,f]=r,l=new Array(i);l.fill(!1);for(const h of f)l[h]=!0;e.push({method:"update",args:[{visible:l}],label:c})});const o=Object.values(s)[0];for(const r of o)this.traces[r].visible=!0;const a=this.layout;if(t=="dropdown"){const r=[{buttons:e,y:1,yanchor:"top"}];a.updatemenus=r}else if(t=="slider"){const r=[{pad:{t:10},currentvalue:{visible:!1,xanchor:"left",prefix:""},steps:e}];a.sliders=r}},updateTheme(){const t={paper_bgcolor:D[this.globalState.colorScheme],plot_bgcolor:this.isUsingFacets?w[this.globalState.colorScheme]:D[this.globalState.colorScheme],font:{color:this.globalState.isDarkMode?"#cccccc":"#444444"}};this.layout=Object.assign({},this.layout,t)},async getVizDetails(){if(this.config){this.vizDetails=JSON.parse(JSON.stringify(this.config)),this.$emit("title",this.vizDetails.title||"Chart"),this.vizDetails.traces&&(this.traces=this.vizDetails.traces);return}this.loadingText="Loading config...";const t=this.yamlConfig??"",e=t.indexOf("/")>-1?t:this.subfolder+"/"+t;try{const s=await this.fileApi.getFileText(e),i=C.parse(s);this.vizDetails=i,this.vizDetails.title||(this.vizDetails.title="Chart"),this.$emit("title",this.vizDetails.title)}catch(s){this.$emit("error",""+s)}},async prepareData(){await Promise.all(Object.entries(this.vizDetails.datasets).map(i=>{let[n,o]=i;return typeof o=="string"&&(o={file:o}),this.loadDataset(n,o)})),this.vizDetails.mergeDatasets&&Object.values(this.vizDetails.datasets).length>1&&(this.vizDetails.datasets={dataset:{name:"dataset",file:"none",data:this.mergeDatasets(Object.values(this.vizDetails.datasets))}});const t=Object.values(this.vizDetails.datasets),e=[],s=this.getColors(this.vizDetails,this.vizDetails.traces.length);this.vizDetails.traces.forEach((i,n)=>{let o=!1;t.forEach(a=>{var c;const r="$"+a.name;if((c=i.name)!=null&&c.startsWith(r)){const f=i.name.replace(r+".",""),l=this.groupDataTable(a.data,f),h=Object.keys(l).length,g=this.getColors(i,h);Object.keys(l).forEach((u,y)=>{const m=JSON.parse(JSON.stringify(i));m.name=u,m.group_name=u,this.recursiveCheckForTemplate(l[u],m,r),g&&("marker"in i||(m.marker={}),m.marker.color=g[y]),e.push(m)}),o=!0}else this.recursiveCheckForTemplate(a.data,i,r)}),o||(s&&("marker"in i||(i.marker={}),i.marker.color=s[n]),e.push(i))}),this.vizDetails.traces=e},async loadDataset(t,e){this.loadingText="Loading datasets...";try{const s=await this.myDataManager.getDataset({dataset:e.file},{highPrecision:!0});return e.data=s.allRows,e.name=t,this.vizDetails.datasets[t]=e,this.transformData(e),e}catch{return this.$emit("error","Error loading "+e.file),{file:t}}},getColors(t,e){if("colorRamp"in t){const s=typeof t.colorRamp=="string"?{ramp:t.colorRamp}:t.colorRamp;return S(s,e>=2?e:2)}return null},transformData(t){var e;"pivot"in t&&this.pivot(t.name,t.data,t.pivot.exclude,t.pivot.valuesTo,t.pivot.namesTo),"rename"in t&&this.renameColumns(t.data,t.rename,((e=t.pivot)==null?void 0:e.namesTo)||"names"),"normalize"in t&&this.normalizeColumns(t.data,t.normalize),"aggregate"in t&&this.aggregateColumns(t.data,t.aggregate.groupBy,t.aggregate.target),"constant"in t&&Object.entries(t.constant).forEach(s=>{const[i,n]=s,o=new Array(Object.values(t.data)[0].values.length);o.fill(n),t.data[i]={name:i,values:o,type:1}})},countOccurrences(t){let e={};return t.forEach(s=>{e[s]=e[s]?e[s]+1:1}),e},groupDataTable(t,e){let s={},i=t[e],n=this.countOccurrences(i.values);Object.entries(n).forEach(r=>{const[c,f]=r;let l={};Object.entries(t).forEach(h=>{const[g,u]=h;l[g]={...u};let y=Object.getPrototypeOf(u.values).constructor;l[g].values=new y(f)}),s[c]=l});for(var o=0;o<t[e].values.length;o++){var a=t[e].values[o];let r=s[a],c=r[e].values.length-n[a]--;Object.entries(t).forEach(f=>{const[l,h]=f;r[l].values[c]=h.values[o]})}return s},aggregateColumns(t,e,s){const i={},n=t[Object.keys(t)[0]].values.length;for(let a=0;a<n;a++){const r=e.reduce((c,f)=>c+=t[f].values[a],"");r in i?i[r][s]+=t[s].values[a]:(i[r]=Object.fromEntries(e.map(c=>[c,t[c].values[a]])),i[r][s]=t[s].values[a])}Object.keys(t).forEach(a=>{e.indexOf(a)==-1&&a!=s&&delete t[a]});const o=Object.fromEntries([...e,s].map(a=>[a,[]]));Object.values(i).forEach(a=>{Object.entries(a).forEach(r=>{o[r[0]].push(r[1])})}),Object.entries(o).forEach(a=>{t[a[0]].values=a[1]})},renameColumns(t,e,s){if(e&&s in t){const i=t[s].values;for(let n=0;n<i.length;n++)i[n]in e&&(i[n]=e[i[n]])}},normalizeColumns(t,e){if(e){const{groupBy:s,target:i}=e,n={};for(let o=0;o<t[i].values.length;o++){let a="";for(let r=0;r<s.length;r++)a+=t[s[r]].values[o];n[a]===void 0?n[a]=t[i].values[o]:n[a]+=t[i].values[o]}for(let o=0;o<t[i].values.length;o++){let a="";for(let r=0;r<s.length;r++)a+=t[s[r]].values[o];t[i].values[o]/=n[a]}}},pivot(t,e,s,i,n){const o=Object.keys(e).filter(l=>s.indexOf(l)==-1);s.forEach(l=>{l in e||this.$emit("error",`Pivot column ${l} not in ${t}`)});const a=Object.fromEntries(s.map(l=>[l,[]])),r=[],c=[],f=e[Object.keys(e)[0]].values.length;for(let l=0;l<f;l++)o.forEach(h=>{s.forEach(g=>a[g].push(e[g].values[l])),c.push(h),r.push(e[h].values[l])});s.forEach(l=>{e[l].values=a[l]}),e[i]={name:i,values:r},e[n]={name:n,values:c}},mergeDatasets(t){const e={},s=t[0].data;return Object.keys(s).forEach(i=>{const n=t.map(a=>(i in a.data||this.$emit("error",`Merged dataset ${a.name} does not contain column ${i}`),a.data[i].values));let o;s[i].values instanceof Float32Array||s[i].values instanceof Float64Array?o=k(n):o=n.flat(),e[i]={name:i,type:s[i].type,values:o}}),e},recursiveCheckForTemplate(t,e,s){Object.entries(e).forEach(i=>{const[n,o]=i;if(typeof o=="string"){if(o.includes(s)){const a=o.substring(o.indexOf(".")+1);a in t?this.vizDetails.multiIndex&&a in this.vizDetails.multiIndex?e[n]=[t[a].values,t[this.vizDetails.multiIndex[a]].values]:e[n]=t[a].values:this.$emit("error",`Column "${a}" not in ${Object.keys(t)}`)}}else Array.isArray(o)?typeof o[0]=="object"&&o.forEach(a=>this.recursiveCheckForTemplate(t,a,s)):typeof o=="object"&&this.recursiveCheckForTemplate(t,o,s)})}}});var A=function(){var e=this,s=e._self._c;return e._self._setupProxy,s("div",{staticClass:"mycomponent",class:{"is-thumbnail":e.thumbnail}},[s("VuePlotly",{staticClass:"myplot",attrs:{data:e.traces,layout:e.layout,options:e.options,id:e.id}})],1)},V=[];var $=z(M,A,V,!1,null,"a59a7f68",null,null);const P=$.exports,R=_({name:"PlotlyDiagramPanel",components:{PlotlyDiagram:P},data:()=>({resizeEvent:{}}),props:{fileSystemConfig:{type:Object,required:!0},subfolder:{type:String,required:!0},config:{type:Object,required:!0},cardId:String},mounted(){this.$emit("isLoaded"),this.$emit("dimension-resizer",{id:this.cardId,resizer:this.changeDimensions})},methods:{changeDimensions(t){this.resizeEvent=t}}});var N=function(){var e=this,s=e._self._c;return e._self._setupProxy,s("plotly-diagram",{staticClass:"plotly-panel",attrs:{root:e.fileSystemConfig.slug,subfolder:e.subfolder,config:e.config,thumbnail:!1,resize:e.resizeEvent},on:{error:function(i){return e.$emit("error",i)}}})},B=[];var Y=z(R,N,B,!1,null,"65382c66",null,null);const it=Y.exports;export{it as default};
//# sourceMappingURL=plotly-c389a620.js.map
